{"version":3,"sources":["helpers/BackendApi.tsx","services/AuthenticationService.ts","redux/UserSlice.ts","services/LoginService.ts","components/navigation/HelperBox.tsx","components/pages/LoginPage.tsx","services/RegisterService.ts","components/pages/RegisterPage.tsx","helpers/History.ts","services/AuthorizationHeader.ts","components/file/FileService.tsx","components/file/FileUtility.ts","components/crypto/CryptoService.js","components/file/FileHandler.tsx","services/LogoutService.ts","components/navigation/Navbar.tsx","components/pages/FileHandlerPage.tsx","helpers/PrivateRoute.jsx","components/crypto/CryptoPage.tsx","App.tsx","redux/store.ts","index.js","styles/logo_but_text.png","styles/loading_graphics.gif","styles/vut_simple_logo.png","styles/copy_icon.svg"],"names":["API_URL","process","username","password","a","axios","post","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","message","initialUser","initialUserLoginState","user","isLoggedIn","userSlice","createSlice","name","initialState","reducers","login","state","action","payload","logout","actions","dispatch","AuthenticationService","then","doLogin","HelperBox","props","useState","isHidden","setHidden","className","warning","content","onClick","onClose","Login","setUsername","setPassword","setMessage","isLoading","setIsLoading","setLoggedIn","search","window","location","showPopup","URLSearchParams","get","useDispatch","validateForm","Validator","isEmail","ignore_max_length","isLength","min","max","isStrongPassword","to","delay","src","logo","alt","onSubmit","e","preventDefault","LoginService","error","toString","type","placeholder","value","onChange","target","disabled","register","Register","isRegistrationSuccessful","setRegistrationSuccessful","RegisterService","console","log","history","createBrowserHistory","AuthorizationHeader","parse","getItem","Authorization","headers","authorizationHeader","directory","files","formData","FormData","keys","forEach","file","push","jsonLabelData","append","Blob","Object","key","responseType","shouldBeFolderDeleted","existingFileKey","keysOfFoldersToBeDeleted","shouldDelete","keyOfFolderToBeDeleted","substr","length","shouldBeFileDeleted","keysOfFilesToBeDeleted","keyOfFileToBeDeleted","existingFiles","addedFiles","prefix","newFiles","map","newKey","substring","size","modified","Moment","unix","uniqueNewFiles","newFile","fileAlreadyExists","existingFile","filter","getAllFilesInFolder","allFiles","folderKey","keysOfFilesToDownload","endsWith","fileKey","includes","folderKeys","keysOfFilesAndFolders","getContentOfFolder","bytes","aesjs","utils","hex","toBytes","aesCounter","ModeOfOperation","ctr","fromBytes","encrypt","decrypt","FileHandler","isLoaded","setLoaded","setFiles","setErrorMessage","useEffect","FileService","res","fileName","hexadecimal","str","n","String","fromCharCode","parseInt","hexToAscii","CryptoService","download","FileUtility","namesMap","Map","set","utf8","encryptedKey","fileReader","FileReader","onload","event","Uint8Array","result","blob","link","document","createElement","href","URL","createObjectURL","lastIndexOf","click","readAsArrayBuffer","modifiedTimeInUnixFormat","duration","icons","Icons","FontAwesome","detailRenderer","onCreateFolder","folder","folders","folderEncrypted","onCreateFiles","i","onWarning","uniqueAddedFileEncrypted","uniqueAddedFiles","arrayBuffer","buffer","createdFile","File","onDeleteFolder","keysOfFilesAndFoldersToBeDeleted","onDeleteFile","fileKeys","onDownloadFile","onDownloadFolder","loadingAnimation","LogoutService","Navbar","useHistory","reload","FileHandlerPage","setWarning","warningMessage","PrivateRoute","Component","component","rest","render","Crypto","cryptoKey","setCryptoKey","warningText","setWarningText","navigator","clipboard","writeText","copyIcon","crypto","getRandomValues","doGenerateKey","App","exact","path","store","configureStore","reducer","userReducer","middleware","thunk","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.74fefa4a.chunk.js","sourcesContent":["export const API_URL=process.env.API_URL","import axios, { AxiosResponse } from \"axios\";\nimport { User } from \"../types\";\nimport {API_URL} from \"../helpers/BackendApi\";\n\nclass AuthenticationService\n{\n  async login(username: string, password: string) \n  {\n    const response: AxiosResponse<User> = await axios.post(API_URL + \"/api/auth/login\", { username, password });\n\n    if (response.data.accessToken)\n    {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n    return response.data;\n  }\n\n  logout()\n  {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"key\");\n  }\n\n  register(username: string, password: string)\n  {\n    var message: string = \"\";\n    return axios.post(API_URL + \"/api/auth/register\", { username, password, message })\n  }\n}\n\nexport default new AuthenticationService();\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { User } from '../types';\n\nconst initialUser: User = {\n    username: \"\",\n    password: \"\",\n    accessToken: \"\"\n}\n\nconst initialUserLoginState = {\n    user: initialUser,\n    isLoggedIn: false\n}\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: initialUserLoginState,\n    reducers: {\n        login: (state, action: PayloadAction<User>) =>\n        {\n            state.user.username = action.payload.username;\n            state.user.password = action.payload.password;\n            state.user.accessToken = action.payload.accessToken;\n            state.isLoggedIn = true;\n        },\n        logout: (state) =>\n        {\n            state.user = initialUser;\n            state.isLoggedIn = false;\n        }\n    }\n});\n\nexport const {login, logout } = userSlice.actions;\n\nexport default userSlice.reducer;","import AuthenticationService from \"./AuthenticationService\";\nimport { User } from \"../types\";\nimport { login as doLogin} from '../redux/UserSlice';\n\nconst login = (dispatch: any, user: User) =>\n{\n    return (\n        AuthenticationService.login(user.username, user.password).then(\n            (user: any) =>\n            {\n                dispatch(doLogin(user));\n            },\n        )\n    );\n}\n\nexport default {login};","import React, { useState } from \"react\";\n\nfunction HelperBox(props: any)\n{\n    const [isHidden, setHidden] = useState(false);\n\n    const handleClose = () =>\n    {\n        setHidden(true);\n        props.onClose();\n    }\n\n    if (isHidden)\n    {\n        return null;\n    }\n\n    return (\n        <div className=\"helper-box\" >\n            <div className=\"left-item\" />\n            <div className={props.warning? \"helper-box-text-warning\" : \"helper-box-text-confirm\"}>{props.content}</div>\n            <div className=\"helper-box-button-container\">\n                <button className=\"helper-box-button\" onClick={handleClose}>X</button>\n            </div> \n        </div >\n    )\n}\n\nexport default HelperBox;","import React, {useState} from \"react\";\nimport {Link, Redirect} from 'react-router-dom';\nimport {useDispatch} from \"react-redux\";\nimport logo from '../../styles/logo_but_text.png';\nimport cube from '../../styles/cube_animation.gif';\nimport LoginService from '../../services/LoginService';\nimport HelperBox from \"../navigation/HelperBox\";\nimport FadeIn from \"react-fade-in\";\nimport Validator from 'validator';\n\nfunction Login()\n{\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [isLoggedIn, setLoggedIn] = useState(false);\n\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const showPopup = params.get('popup');\n\n    const dispatch = useDispatch();\n\n    const onChangeUsername = (e: { target: { value: any; }; }) =>\n    {\n        setUsername(e.target.value);\n    }\n\n    const onChangePassword = (e: { target: { value: any; }; }) =>\n    {\n        setPassword(e.target.value);\n    }\n\n    const handleLogin = (e: { preventDefault: () => void; }) =>\n    {\n        e.preventDefault();\n\n        setIsLoading(true);\n\n        if (validateForm())\n        {\n            var user = { username: username, password: password, accessToken: \"\" };\n\n            LoginService.login(dispatch, user)\n                .then(\n                    (user: any) =>\n                    {\n                        setLoggedIn(true);\n                    },\n                    (error: any) =>\n                    {\n                        setLoggedIn(false);\n                        setIsLoading(false);\n\n                        var message = \"\";\n                        if (error && error.response && error.response.data.message)\n                        {\n                            message = error.response.data.message;\n                        }\n                        else if (error.message)\n                        {\n                            message = error.message;\n                        }\n                        else if (error.toString())\n                        {\n                            message = error.toString();\n                        }\n\n                        setMessage(message);\n                    });\n        } else\n        {\n            setIsLoading(false);\n        }\n    }\n\n    const validateForm = ():boolean => {\n        if (!Validator.isEmail(username, {ignore_max_length: false})){\n            setMessage(\"Email format is not valid!\");\n            return false;\n        }\n\n        if(!Validator.isLength(password, {min:8, max: 50}) || !Validator.isStrongPassword(password)){\n            setMessage(\"Password is not valid!\");\n            return  false;\n        }\n\n        return  true;\n    }\n\n    if (isLoggedIn)\n    {\n        return <Redirect to=\"/crypto\" />;\n    }\n\n    return (\n            <>\n            <div className=\"wrapper\">\n                {showPopup == 't' && <HelperBox content=\"Thanks for registration. Now you can login!\" />}\n            </div>\n            <div className=\"landing-page-wrapper\">\n                    <FadeIn delay={250}>\n                        <div className=\"landing-page\">\n                            <div className=\"landing-page-text\">Secure Storage</div>\n                                <div className=\"login-form\">\n                                    <img className='logo' src={logo} alt=\"logo_but\" />\n                                    <div className=\"login-page-content\">\n                                        <form onSubmit={handleLogin}>\n                                            <div className=\"login-item\">\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"input-text\"\n                                                    name=\"email\"\n                                                    placeholder=\"Email\"\n                                                    value={username}\n                                                    onChange={onChangeUsername}\n                                                />\n                                            </div>\n                                            <div className=\"login-item\">\n                                                <input\n                                                    type=\"password\"\n                                                    className=\"input-text\"\n                                                    name=\"password\"\n                                                    placeholder=\"Password\"\n                                                    value={password}\n                                                    onChange={onChangePassword}\n                                                />\n                                            </div>\n                                            <div className=\"login-item\">\n                                                <button className=\"submit-button\" disabled={isLoading}>\n                                                    <span>Login</span>\n                                                </button>\n                                            </div>\n                                            {message && (\n                                                <div className=\"login-item\">\n                                                    <div className=\"alert-text\">\n                                                        {message}\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </form>\n                                        <div className=\"login-link\">\n                                            <p className=\"login-link-text\" >Do not have an account?</p>\n                                            <Link className=\"login-link-reference\" to=\"/register\">Register</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                        </div>\n                    </FadeIn>\n                </div >\n            </>\n    );\n}\n\nexport default Login;\n","import AuthenticationService from \"../services/AuthenticationService\";\n\nconst register = (username: string, password: string): any =>\n{\n    return AuthenticationService.register(username, password);\n};\n\nexport default {register};","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport logo from '../../styles/logo_but_text.png';\nimport dots from '../../styles/dots_logo_big.svg';\nimport RegisterService from \"../../services/RegisterService\";\nimport FadeIn from \"react-fade-in\";\nimport Validator from \"validator\";\n\nfunction Register()\n{\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [isRegistrationSuccessful, setRegistrationSuccessful] = useState(false);\n\n    const onChangeUsername = (e: { target: { value: string; }; }) =>\n    {\n        setUsername(e.target.value);\n    }\n\n    const onChangePassword = (e: { target: { value: string; }; }) =>\n    {\n        setPassword(e.target.value);\n    }\n\n    const handleRegister = (e: { preventDefault: () => void; }) =>\n    {\n        e.preventDefault();\n        setIsLoading(true);\n        setRegistrationSuccessful(false);\n\n        if (validateForm()) //TODO Jan: implement proper validation\n        {\n            RegisterService.register(username, password).then(\n                () =>\n                {\n                    setRegistrationSuccessful(true)\n                },\n                (error: any) =>\n                {\n                    var message = \"\";\n                    if (error && error.response && error.response.data.message)\n                    {\n                        message = error.response.data.message;\n                    }\n                    else if (error.message)\n                    {\n                        console.log(error.message)\n                        message = error.message;\n                    }\n                    else if (error.toString())\n                    {\n                        message = error.toString();\n                    }\n\n                    setMessage(message)\n                    setIsLoading(false);\n                });\n        } else\n        {\n         setIsLoading(false);\n        }\n    }\n\n    const validateForm = ():boolean => {\n        if (!Validator.isEmail(username, {ignore_max_length: false})){\n            setMessage(\"Email format is not valid!\");\n            return false;\n        }\n\n        if(!Validator.isLength(password, {min:8, max: 50}) || !Validator.isStrongPassword(password)){\n            setMessage(\"Password is not valid!\");\n            return  false;\n        }\n\n        return  true;\n    }\n\n    if (isRegistrationSuccessful)\n    {\n        return <Redirect to=\"/login?popup=t\" />;\n    }\n\n    return (\n        <div>\n            <FadeIn>\n                <div className=\"register-page\">\n                    <img className='logo' src={logo} alt=\"logo_but\" />\n                    <form onSubmit={handleRegister}>\n                        <div>\n                            <div className=\"register-item email-text\">\n                                <input\n                                    type=\"text\"\n                                    className=\"input-text\"\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    value={username}\n                                    onChange={onChangeUsername}\n                                />\n                            </div>\n                            <div className=\"register-item password-text\">\n                                <input\n                                    type=\"password\"\n                                    className=\"input-text\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={onChangePassword}\n                                />\n                            </div>\n                            <div className=\"register-item\">\n                            <button className=\"submit-button\">Sign Up</button>\n                            </div>\n                        </div>\n                        {message !== \"\" && (\n                            <div className=\"register-item\">\n                                <div className=\"alert-text\">\n                                {message}\n                                </div>\n                            </div>\n                        )}\n                    </form>\n                    <div className=\"register-link\">\n                        <p className=\"register-link-text\" >Already have an account?</p>\n                        <Link className=\"register-link-reference\" to=\"/login\">Login</Link>\n                    </div>\n                </div>\n            </FadeIn >\n        </div>\n    );\n}\n\nexport default Register;","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();","import { AuthorizationHeader as AuthorizationHeaderInterface, User } from \"../types\";\n\nexport default function AuthorizationHeader()\n{\n    const user: User = JSON.parse(localStorage.getItem('user') || '{}');\n\n    if (user && user.accessToken)\n    {\n        var authorizationHeader: AuthorizationHeaderInterface = { Authorization: 'Bearer ' + user.accessToken };\n        return authorizationHeader;\n    } else\n    {\n        return {};\n    }\n}","import axios from \"axios\";\nimport { FileInformation } from \"../../types\";\nimport authorizationHeader from \"../../services/AuthorizationHeader\";\nimport {API_URL} from \"../../helpers/BackendApi\";\n\nconst getFiles = () =>\n{\n    return axios.get(API_URL + '/api/dataset', {headers: authorizationHeader()});\n}\n\nconst createDirectory = (directory: FileInformation) =>\n{\n    return axios.post(\n        API_URL + '/api/dataset/createdirectory',\n        directory,\n        {\n            headers: \n            {\n                'Authorization': authorizationHeader()['Authorization'],\n                'Content-type': 'application/json; charset=utf-8'\n            }\n        }\n    );\n};\n\nconst uploadFiles = (files: File[]) =>\n{\n    let formData = new FormData();\n    let keys: any = [];\n\n    files.forEach(file =>\n    {\n        keys.push(file.name);\n    });\n\n    let jsonLabelData = {\n        'keys': keys\n    };\n\n    formData.append(\n        'keys',\n        new Blob([JSON.stringify(jsonLabelData)], {\n            type: 'application/json'\n        }));\n\n    for (let key of Object.keys(files))\n    {\n        if (key !== 'length')\n        {\n            formData.append('files', files[key]);\n        }\n    }\n\n    return axios.post(API_URL + '/api/dataset/uploadfiles', formData, { headers: authorizationHeader() }, );\n}\n\nconst deleteFolders = (keys: string[]) => {\n    return axios.post(\n        API_URL + '/api/dataset/folders/delete',\n        keys,\n        {\n            headers:\n                {\n                    'Authorization': authorizationHeader()['Authorization'],\n                    'Content-type': 'application/json; charset=utf-8'\n                }\n        }\n    );\n}\n\nconst deleteFiles = (keys: string[]) => {\n    return axios.post(\n        API_URL + '/api/dataset/files/delete',\n        keys,\n        {\n            headers:\n                {\n                    'Authorization': authorizationHeader()['Authorization'],\n                    'Content-type': 'application/json; charset=utf-8'\n                }\n        }\n    );\n}\n\nconst moveFile = (oldKey: string, newKey: string) => {\n    return axios.post(\n        API_URL + '/api/dataset/files/move',\n        {oldKey, newKey},\n        {\n            headers:\n                {\n                    'Authorization': authorizationHeader()['Authorization'],\n                    'Content-type': 'application/json; charset=utf-8'\n                }\n        }\n    );\n}\n\nconst moveFolder = (oldKey: string, newKey: string) => {\n    return axios.post(\n        API_URL + '/api/dataset/folders/move',\n        {oldKey, newKey},\n        {\n            headers:\n                {\n                    'Authorization': authorizationHeader()['Authorization'],\n                    'Content-type': 'application/json; charset=utf-8'\n                }\n        }\n    );\n}\n\nconst download = (key: string) => {\n    return axios.post<any>(\n        API_URL + '/api/dataset/download',\n        key,\n        {\n            headers:\n                {\n                    'Authorization': authorizationHeader()['Authorization'],\n                    'Content-type': 'application/json; charset=utf-8'\n                },\n            responseType: 'blob'\n        }\n    );\n}\n\nexport default { getFiles, createDirectory, uploadFiles, deleteFolders, deleteFiles, moveFile, moveFolder, download }","import {FileInformation} from \"../../types\";\nimport Moment from \"moment\";\n\nconst getUniqueAddedFiles = (existingFiles: FileInformation[], addedFiles: File[], prefix: string): FileInformation[] => {\n    const newFiles: Array<FileInformation> = addedFiles.map((file) =>\n    {\n        let newKey = prefix\n        if (prefix !== '' && prefix.substring(prefix.length - 1) !== '/')\n        {\n            newKey += '/'\n        }\n        newKey += file.name\n        return {\n            key: newKey,\n            size: file.size,\n            modified: +Moment().unix(),\n            data: file\n        }\n    })\n\n    const uniqueNewFiles: Array<FileInformation> = [];\n\n    newFiles.map((newFile) =>\n    {\n        let fileAlreadyExists = false;\n        existingFiles.map((existingFile) =>\n        {\n            if (existingFile.key === newFile.key)\n            {\n                fileAlreadyExists = true;\n            }\n        })\n        if (!fileAlreadyExists)\n        {\n            uniqueNewFiles.push(newFile);\n        }\n    })\n\n    return uniqueNewFiles;\n}\n\nconst deleteSelectedFolders = (existingFiles: FileInformation[], keysOfFoldersToBeDeleted: string[]): FileInformation[] => {\n    return existingFiles.filter(file => !shouldBeFolderDeleted(file.key, keysOfFoldersToBeDeleted));\n}\n\nconst deleteSelectedFiles = (existingFiles: FileInformation[], keysOfFilesToBeDeleted: string[]): FileInformation[] => {\n    return existingFiles.filter(file => !shouldBeFileDeleted(file.key, keysOfFilesToBeDeleted));\n}\n\nconst moveFile = (existingFiles: FileInformation[], oldKey: string, newKey: string): FileInformation[] => {\n    const unique = isFileKeyUnique(existingFiles, newKey);\n    let updatedFiles: FileInformation[] = [];\n    existingFiles.forEach(file => {\n        if (unique && file.key === oldKey) {\n            updatedFiles.push({\n                ...file,\n                key: newKey,\n                modified: +Moment(),\n            })\n        } else {\n            updatedFiles.push(file);\n        }\n    });\n    return updatedFiles;\n}\n\nconst moveFolder = (existingFiles: FileInformation[], oldKey: string, newKey: string): FileInformation[] => {\n    const unique = isFolderKeyUnique(existingFiles, newKey);\n    let updatedFiles: FileInformation[] = [];\n    existingFiles.forEach(file => {\n        if (unique && (file.key.substr(0, oldKey.length) === oldKey))\n        {\n            updatedFiles.push({\n                ...file,\n                key: file.key.replace(oldKey, newKey),\n                modified: +Moment(),\n            })\n        } else {\n            updatedFiles.push(file)\n        }\n    })\n    return updatedFiles;\n}\n\nconst isFileKeyUnique = (existingFiles: FileInformation[], keyOfTheFile: string): boolean => {\n    let unique = true;\n    existingFiles.forEach(file => {\n        if (file.key === keyOfTheFile)\n        {\n            unique = false;\n            return;\n        }\n    })\n    return unique;\n}\n\nconst isFolderKeyUnique = (existingFiles: FileInformation[], keyOfTheFolder: string): boolean => {\n    let unique = true;\n    existingFiles.forEach(file => {\n        if (file.key.substr(0, keyOfTheFolder.length) === keyOfTheFolder)\n        {\n            unique = false;\n        }\n    })\n    return unique;\n}\n\nconst shouldBeFolderDeleted = (existingFileKey: string, keysOfFoldersToBeDeleted: string[]): boolean => {\n    let shouldDelete = false;\n    keysOfFoldersToBeDeleted.forEach((keyOfFolderToBeDeleted) => {\n        if (existingFileKey.substr(0, keyOfFolderToBeDeleted.length) === keyOfFolderToBeDeleted)\n        {\n            shouldDelete = true;\n            return;\n        }\n    });\n    return shouldDelete;\n}\n\nconst shouldBeFileDeleted = (existingFileKey: string, keysOfFilesToBeDeleted: string[]): boolean => {\n    let shouldDelete = false;\n    keysOfFilesToBeDeleted.forEach((keyOfFileToBeDeleted) => {\n        if (keyOfFileToBeDeleted === existingFileKey)\n        {\n            shouldDelete = true;\n            return;\n        }\n    });\n    return shouldDelete;\n}\n\nconst getAllFilesInFolder = (allFiles: FileInformation[], folderKey: string): string[] =>\n{\n    let keysOfFilesToDownload: string[] = [];\n    allFiles.forEach(file => {\n        if (file.key !== folderKey && file.key.substr(0, folderKey.length) === folderKey)\n        {\n            if(file.key.endsWith(\"/\"))\n            {\n                getAllFilesInFolder(allFiles, file.key).forEach(fileKey => {\n                    if(!keysOfFilesToDownload.includes(fileKey))\n                    {\n                        keysOfFilesToDownload.push(fileKey);\n                    }\n                });\n            }\n            else if (!keysOfFilesToDownload.includes(file.key))\n            {\n                keysOfFilesToDownload.push(file.key);\n            }\n        }\n    });\n    return keysOfFilesToDownload;\n}\n\nconst getContentOfFolder = (allFiles: FileInformation[], folderKey: string): string[] =>\n{\n    return allFiles.filter(file => file.key !== folderKey && file.key.substr(0, folderKey.length) === folderKey).map(file => file.key);\n}\n\nconst getContentOfFolders = (allFiles: FileInformation[], folderKeys: string[]) =>\n{\n    const keysOfFilesAndFolders: string[] = [];\n    folderKeys.forEach(folderKey => {\n        getContentOfFolder(allFiles, folderKey).forEach(fileKey => {\n            if (!keysOfFilesAndFolders.includes(fileKey))\n            {\n                keysOfFilesAndFolders.push(fileKey);\n            }\n        })\n    })\n    return keysOfFilesAndFolders;\n}\n\nexport default {getUniqueAddedFiles, deleteSelectedFolders, deleteSelectedFiles, moveFile, moveFolder, getAllFilesInFolder, getContentOfFolders};","import aesjs from \"aes-js\";\n\nconst encrypt = (bytes) => {\n    const key = aesjs.utils.hex.toBytes(localStorage.getItem(\"crypto_key\"));\n    let aesCounter = new aesjs.ModeOfOperation.ctr(key);\n    return aesjs.utils.hex.fromBytes(aesCounter.encrypt(bytes));\n}\n\nconst encryptBytesFormat = (bytes) => {\n    const key = aesjs.utils.hex.toBytes(localStorage.getItem(\"crypto_key\"));\n    let aesCounter = new aesjs.ModeOfOperation.ctr(key);\n    return aesCounter.encrypt(bytes);\n}\n\nconst decrypt = (bytes) => {\n    const key = aesjs.utils.hex.toBytes(localStorage.getItem(\"crypto_key\"));\n    let aesCounter = new aesjs.ModeOfOperation.ctr(key);\n    return aesjs.utils.hex.fromBytes(aesCounter.decrypt(bytes));\n}\n\nconst decryptBytesFormat = (bytes) => {\n    const key = aesjs.utils.hex.toBytes(localStorage.getItem(\"crypto_key\"));\n    let aesCounter = new aesjs.ModeOfOperation.ctr(key);\n    return aesCounter.decrypt(bytes);\n}\n\n\nexport default { encrypt, decrypt, encryptBytesFormat, decryptBytesFormat }","import React, {useEffect, useState} from 'react'\nimport FileBrowser, {Icons} from 'react-keyed-file-browser';\nimport Moment from 'moment';\nimport '../../styles/FileHandler.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport {AxiosResponse} from 'axios';\nimport {FileInformation} from '../../types';\nimport FileService from './FileService';\nimport loadingAnimation from \"../../styles/loading_graphics.gif\";\nimport FadeIn from 'react-fade-in';\nimport FileUtility from \"./FileUtility\";\nimport CryptoService from \"../crypto/CryptoService\";\nimport aesjs from \"aes-js\";\n\nfunction hexToAscii(hexadecimal)\n{\n    const hex = hexadecimal.toString();\n    let str = '';\n    for (let n = 0; n < hex.length; n += 2) {\n        str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n    }\n    return str;\n}\n\nfunction FileHandler(props)\n{\n    const [isLoaded, setLoaded] = useState(false);\n    const [files, setFiles] = useState<FileInformation[]>([]);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() =>\n    {\n        FileService.getFiles()\n            .then(\n                (res: AxiosResponse<any>) =>\n                {\n                    const files: Array<FileInformation> = [];\n                    if (res.data)\n                    {\n                        res.data.forEach(file =>\n                        {\n                            const fileName = hexToAscii(CryptoService.decrypt(aesjs.utils.hex.toBytes(file.key)));\n                            if (fileName.endsWith('/'))\n                            {\n                                files.push({key: fileName});\n                                return;\n                            }\n                            file.key = fileName\n                            files.push(file);\n                        });\n                    }\n                    setFiles(files);\n                    setLoaded(true);\n                },\n                (error) =>\n                {\n                    setErrorMessage(error.message);\n                    setLoaded(true);\n                }\n            )\n    }, [])\n\n    const handleCreateFolder = (key: string) =>\n    {\n        const folder: FileInformation = {key: key};\n        setFiles(folders => [...folders, folder]);\n        const folderEncrypted: FileInformation = {key: CryptoService.encrypt(aesjs.utils.utf8.toBytes(key))};\n        FileService.createDirectory(folderEncrypted);\n    }\n\n    const handleCreateFiles = (addedFiles: File[], prefix: string) =>\n    {\n        for(let i = 0; i < addedFiles.length; i++)\n        {\n            if (!addedFiles[i].name.includes(\".\"))\n            {\n                props.onWarning(\"Dear user, please drag & drop files only. You can create a folder by clicking on 'Add Folder' button.\");\n                return;\n            }\n        }\n        setLoaded(false);\n        let uniqueAddedFiles: FileInformation[] = FileUtility.getUniqueAddedFiles(files, addedFiles, prefix);\n        let uniqueAddedFileEncrypted: any;\n\n        uniqueAddedFiles.forEach(async file => {\n            // @ts-ignore\n            await file.data?.arrayBuffer().then(buffer =>{\n                uniqueAddedFileEncrypted = {\n                    'key':  CryptoService.encrypt(aesjs.utils.utf8.toBytes(file.key)),\n                    'data': CryptoService.encryptBytesFormat(new Uint8Array(buffer))\n                };\n                const createdFile = new File([uniqueAddedFileEncrypted.data], uniqueAddedFileEncrypted.key);\n                FileService.uploadFiles([createdFile]);\n                });\n            });\n        setFiles(existingFiles => [...existingFiles, ...uniqueAddedFiles])\n        setLoaded(true);\n    }\n\n    const handleDeleteFolders = (folderKeys: string[]) =>\n    {\n        const keysOfFilesAndFoldersToBeDeleted = FileUtility.getContentOfFolders(files, folderKeys);\n\n        folderKeys.forEach(folderKey => {\n            if(!keysOfFilesAndFoldersToBeDeleted.includes(folderKey))\n            {\n                keysOfFilesAndFoldersToBeDeleted.push(folderKey);\n            }\n        });\n\n        FileService.deleteFiles(keysOfFilesAndFoldersToBeDeleted.map(fileKey => CryptoService.encrypt(aesjs.utils.utf8.toBytes(fileKey)))).then(() => {\n            setFiles(FileUtility.deleteSelectedFolders(files, folderKeys));\n        });\n    }\n\n    const handleDeleteFiles = (fileKeys: string[]) =>\n    {\n        FileService.deleteFiles(fileKeys.map(fileKey => CryptoService.encrypt(aesjs.utils.utf8.toBytes(fileKey)))).then(() => {\n            setFiles(FileUtility.deleteSelectedFiles(files, fileKeys));\n        });\n    }\n\n    const handleDownloadFile = (keys: string[]) => {\n        download(keys);\n    }\n\n    const handleDownloadFolder = (keys: string[]) => {\n        download(keys);\n    }\n\n    const download = (keys: string[]) => {\n        let keysOfFilesToDownload: string[] = [];\n\n        keys.forEach(key => {\n            if (key.endsWith(\"/\"))\n            {\n                FileUtility.getAllFilesInFolder(files, key).forEach(fileKey => {\n                    if(!keysOfFilesToDownload.includes(fileKey))\n                    {\n                        keysOfFilesToDownload.push(fileKey);\n                    }\n                })\n            } else {\n                if (!keysOfFilesToDownload.includes(key))\n                {\n                    keysOfFilesToDownload.push(key);\n                }\n            }\n        });\n\n        let namesMap : Map<string, string> = new Map();\n\n        keysOfFilesToDownload.forEach(key => {\n            namesMap.set(key, CryptoService.encrypt(aesjs.utils.utf8.toBytes(key)));\n        })\n\n        namesMap.forEach((encryptedKey, key) => {\n            FileService.download(encryptedKey).then(response => {\n                let fileReader = new FileReader();\n                fileReader.onload = function(event) {\n                    // @ts-ignore\n                    let bytes = CryptoService.decryptBytesFormat(new Uint8Array(event.target.result));\n                    const blob = new Blob([bytes], );\n                    const link = document.createElement('a');\n                    link.href = window.URL.createObjectURL(blob);\n                    link.download = key.substr(key.lastIndexOf(\"/\") + 1, key.length);\n                    link.click();\n                };\n                fileReader.readAsArrayBuffer(response.data);\n            });\n        });\n    }\n\n    if (!isLoaded)\n    {\n        return <FadeIn>\n            <div className='loading-animation-wrapper'>\n                <img className='dataset-loading-animation' src={loadingAnimation} alt=\"loadingAnimation\"/>\n            </div>\n        </FadeIn>\n    }\n    return (\n        <div>\n            <FadeIn>\n                <div className=\"file-editor-wrapper\">\n                    <FileBrowser\n                        files={files.map(file =>\n                        {\n                            const modifiedTimeInUnixFormat = file.modified ? file.modified : 0;\n                            if (modifiedTimeInUnixFormat !== 0)\n                            {\n                                const modified = Moment.duration(modifiedTimeInUnixFormat * 1000);\n                                return ({\n                                    key: file.key,\n                                    modified: +modified,\n                                    size: file.size\n                                })\n                            }\n                            return ({\n                                key: file.key\n                            })\n                        })}\n                        icons={Icons.FontAwesome(4)}\n                        detailRenderer={() => null}\n                        onCreateFolder={handleCreateFolder}\n                        onCreateFiles={handleCreateFiles}\n                        onDeleteFolder={handleDeleteFolders}\n                        onDeleteFile={handleDeleteFiles}\n                        onDownloadFile={handleDownloadFile}\n                        onDownloadFolder={handleDownloadFolder}\n                    />\n                </div>\n            </FadeIn>\n        </div>\n    )\n}\n\nexport default FileHandler;","\nimport { logout } from '../redux/UserSlice';\nimport AuthenticationService from './AuthenticationService';\n\nfunction LogoutService(dispatch: any)\n{\n    AuthenticationService.logout();\n    dispatch(logout());\n}\n\nexport default LogoutService;","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport LogoutService from \"../../services/LogoutService\";\nimport logo from '../../styles/vut_simple_logo.png'\n\nfunction Navbar(props: any)\n{\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const handleLogout = (e: { preventDefault: () => void; }) =>\n    {\n        e.preventDefault();\n\n        LogoutService(dispatch);\n        history.push(\"/login\");\n        window.location.reload();\n    }\n    return (\n        <div>\n            <nav className=\"upper-navbar\">\n                <a className=\"logo-container\" href=\"/files\"><img className='logo-simple' src={logo} alt=\"logo_but\" /></a>\n                <Link to=\"/files\" className=\"upper-navbar-item\">Storage</Link>\n                <a className=\"upper-navbar-item-logout\"><button className=\"upper-navbar-logout-button\" onClick={handleLogout}><Link to=\"/logout\">Logout</Link></button></a>\n            </nav>\n        </div >)\n}\n\nexport default Navbar;","import React, {useState} from \"react\";\nimport FileHandler from \"../file/FileHandler\";\nimport Navbar from \"../navigation/Navbar\";\nimport HelperBox from \"../navigation/HelperBox\";\n\nfunction FileHandlerPage()\n{\n    const [warning, setWarning] = useState(\"\");\n    const onWarningClose = () => {\n        setWarning(\"\");\n    }\n    return (\n        <div>\n            <div className=\"wrapper\">\n            <HelperBox content={'Your secret key is: ' + localStorage.getItem('crypto_key')} onClose={() => null}/>\n            {warning && <HelperBox content={warning} warning={true} onClose={onWarningClose}/>}\n            <Navbar/>\n            </div>\n            <FileHandler onWarning={warningMessage => setWarning(warningMessage)} />\n        </div>\n    )\n}\n\nexport default FileHandlerPage;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            localStorage.user ? <Component {...props} /> : <Redirect to=\"/login\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React, {useState} from \"react\";\nimport aesjs from \"aes-js\";\nimport { useHistory } from 'react-router-dom';\nimport HelperBox from \"../navigation/HelperBox\";\nimport copyIcon from '../../styles/copy_icon.svg';\n\nconst Crypto = () =>{\n    const history = useHistory();\n    let [cryptoKey, setCryptoKey] = useState(\"\");\n    let [warningText, setWarningText] = useState(\"\");\n\n    const doGenerateKey = () => {\n        const bytes = new Uint8Array(32);\n        window.crypto.getRandomValues(bytes);\n        return aesjs.utils.hex.fromBytes(bytes);\n    }\n\n    const generateKey = () => {\n        setWarningText(\"Please copy the key to your local storage and keep it safe.\")\n        let key = doGenerateKey();\n        localStorage.setItem(\"crypto_key\", key);\n        setCryptoKey(key);\n    }\n\n    const onChangeCryptoKey = (e: { target: { value: any; }; }) =>\n    {\n        setWarningText(\"\");\n        let key = e.target.value\n        localStorage.setItem(\"crypto_key\", key);\n        setCryptoKey(key);\n    }\n\n    const redirectToFiles = () => {\n        history.push('files');\n    }\n\n    return(\n        <div>\n            <div className=\"wrapper\">\n                <HelperBox content={\"Dear user, please paste your secret key below or if this is your first time here, generate a new one.\"} onClose={() => null}/>\n            </div>\n            <div className=\"crypto-wrapper\">\n                {warningText && <div className=\"warning-test\">{warningText}</div>}\n                <div className=\"crypto-item\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text-wide crypto-item\"\n                        name=\"cryptoKey\"\n                        placeholder=\"Paste your key here or generate a new one\"\n                        value={cryptoKey}\n                        onChange={onChangeCryptoKey}/>\n                    {cryptoKey &&\n                        <button onClick={() => navigator.clipboard.writeText(cryptoKey)} className=\"copy-button\">\n                            <img className=\"copy-icon\" src={copyIcon} alt=\"copyToClipboard\" />\n                        </button>\n                    }\n                </div>\n            <button className=\"submit-button crypto-item\" onClick={generateKey}>\n                <span>Generate Random Key</span>\n            </button>\n            <button className=\"submit-button green crypto-item\" onClick={redirectToFiles} disabled={cryptoKey.length !== 64}>\n                <span>Go see my files!</span>\n            </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Crypto;","import React, { Component } from \"react\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Login from \"./components/pages/LoginPage\";\nimport Register from \"./components/pages/RegisterPage\";\nimport { history } from \"./helpers/History\";\nimport { User } from \"./types\";\nimport FileHandlerPage from \"./components/pages/FileHandlerPage\";\nimport PrivateRoute from \"./helpers/PrivateRoute\";\nimport Crypto from \"./components/crypto/CryptoPage\";\n\ninterface AppProps\n{\n  dispatch: any,\n  user: User\n}\n\nclass App extends Component<AppProps, User>\n{\n  render()\n  {\n    return (\n      <div>\n        <style>\n          @import url('https://fonts.googleapis.com/css2?family=Lato&display=swap');\n        </style>\n        < Router history={history} >\n          <div className=\"navigation-page\" >\n            <Switch>\n              <PrivateRoute exact path={[\"/\"]} component={FileHandlerPage} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/logout\" component={Login} />\n              <PrivateRoute exact path=\"/crypto\" component={Crypto} />\n              <PrivateRoute exact path=\"/files\" component={FileHandlerPage} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './UserSlice'\n\nimport thunk from \"redux-thunk\";\n\nexport const store = configureStore({\n    reducer: {\n        user: userReducer\n    },\n    middleware: [thunk]\n})\n\n//TODO Jan: How to use these states?\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo_but_text.4c1b23d0.png\";","module.exports = __webpack_public_path__ + \"static/media/loading_graphics.400f11c8.gif\";","module.exports = __webpack_public_path__ + \"static/media/vut_simple_logo.c91edadd.png\";","module.exports = __webpack_public_path__ + \"static/media/copy_icon.8f4897a3.svg\";"],"sourceRoot":""}