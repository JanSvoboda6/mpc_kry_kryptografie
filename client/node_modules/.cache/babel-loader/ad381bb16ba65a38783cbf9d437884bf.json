{"ast":null,"code":"var _jsxFileName = \"/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/analysis/ExampleControls.tsx\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { lightTheme, darkTheme } from '@visx/xychart';\nimport { PatternLines } from '@visx/pattern';\nimport cityTemperature from '@visx/mock-data/lib/mocks/cityTemperature';\nimport { GlyphCross, GlyphDot, GlyphStar } from '@visx/glyph';\nimport { curveLinear, curveStep, curveCardinal } from '@visx/curve';\nimport userPrefersReducedMotion from './userPrefersReducedMotion';\nimport getAnimatedOrUnanimatedComponents from './getAnimatedOrUnanimatedComponents';\nconst dateScaleConfig = {\n  type: 'band',\n  paddingInner: 0.3\n};\nconst temperatureScaleConfig = {\n  type: 'linear'\n};\nconst numTicks = 4;\nconst data = cityTemperature.slice(225, 275);\nconst dataMissingValues = data.map((d, i) => i === 10 || i === 11 ? { ...d,\n  'San Francisco': 'nope',\n  'New York': 'notanumber',\n  Austin: 'null'\n} : d);\nconst dataSmall = data.slice(0, 15);\nconst dataSmallMissingValues = dataMissingValues.slice(0, 15);\n\nconst getDate = d => d.date;\n\nconst getSfTemperature = d => Number(d['San Francisco']);\n\nconst getNegativeSfTemperature = d => -getSfTemperature(d);\n\nconst getNyTemperature = d => Number(d['New York']);\n\nconst getAustinTemperature = d => Number(d.Austin);\n\nconst defaultAnnotationDataIndex = 13;\nconst selectedDatumPatternId = 'xychart-selected-datum';\nexport default function ExampleControls(_ref) {\n  let {\n    children\n  } = _ref;\n  const [useAnimatedComponents, setUseAnimatedComponents] = useState(!userPrefersReducedMotion());\n  const [theme, setTheme] = useState(darkTheme);\n  const [animationTrajectory, setAnimationTrajectory] = useState('center');\n  const [gridProps, setGridProps] = useState([false, false]);\n  const [showGridRows, showGridColumns] = gridProps;\n  const [xAxisOrientation, setXAxisOrientation] = useState('bottom');\n  const [yAxisOrientation, setYAxisOrientation] = useState('right');\n  const [renderHorizontally, setRenderHorizontally] = useState(false);\n  const [showTooltip, setShowTooltip] = useState(true);\n  const [annotationDataKey, setAnnotationDataKey] = useState(null);\n  const [annotationType, setAnnotationType] = useState('circle');\n  const [showVerticalCrosshair, setShowVerticalCrosshair] = useState(true);\n  const [showHorizontalCrosshair, setShowHorizontalCrosshair] = useState(false);\n  const [snapTooltipToDatumX, setSnapTooltipToDatumX] = useState(true);\n  const [snapTooltipToDatumY, setSnapTooltipToDatumY] = useState(true);\n  const [sharedTooltip, setSharedTooltip] = useState(true);\n  const [renderBarStackOrGroup, setRenderBarStackOrGroup] = useState('none');\n  const [renderAreaLineOrStack, setRenderAreaLineOrStack] = useState('areastack');\n  const [stackOffset, setStackOffset] = useState();\n  const [renderGlyphSeries, setRenderGlyphSeries] = useState(false);\n  const [editAnnotationLabelPosition, setEditAnnotationLabelPosition] = useState(false);\n  const [annotationLabelPosition, setAnnotationLabelPosition] = useState({\n    dx: -40,\n    dy: -20\n  });\n  const [annotationDataIndex, setAnnotationDataIndex] = useState(defaultAnnotationDataIndex);\n  const [negativeValues, setNegativeValues] = useState(false);\n  const [fewerDatum, setFewerDatum] = useState(false);\n  const [missingValues, setMissingValues] = useState(false);\n  const [glyphComponent, setGlyphComponent] = useState('star');\n  const [curveType, setCurveType] = useState('linear');\n  const glyphOutline = theme.gridStyles.stroke;\n  const renderGlyph = useCallback(_ref2 => {\n    let {\n      size,\n      color,\n      onPointerMove,\n      onPointerOut,\n      onPointerUp\n    } = _ref2;\n    const handlers = {\n      onPointerMove,\n      onPointerOut,\n      onPointerUp\n    };\n\n    if (glyphComponent === 'star') {\n      return /*#__PURE__*/React.createElement(GlyphStar, Object.assign({\n        stroke: glyphOutline,\n        fill: color,\n        size: size * 10\n      }, handlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 24\n        }\n      }));\n    }\n\n    if (glyphComponent === 'circle') {\n      return /*#__PURE__*/React.createElement(GlyphDot, Object.assign({\n        stroke: glyphOutline,\n        fill: color,\n        r: size / 2\n      }, handlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 24\n        }\n      }));\n    }\n\n    if (glyphComponent === 'cross') {\n      return /*#__PURE__*/React.createElement(GlyphCross, Object.assign({\n        stroke: glyphOutline,\n        fill: color,\n        size: size * 10\n      }, handlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 24\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"text\", Object.assign({\n      dx: \"-0.75em\",\n      dy: \"0.25em\",\n      fontSize: 14\n    }, handlers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), \"\\uD83C\\uDF4D\");\n  }, [glyphComponent, glyphOutline]);\n  const [enableTooltipGlyph, setEnableTooltipGlyph] = useState(false);\n  const [tooltipGlyphComponent, setTooltipGlyphComponent] = useState('star');\n  const renderTooltipGlyph = useCallback(_ref3 => {\n    let {\n      x,\n      y,\n      size,\n      color,\n      onPointerMove,\n      onPointerOut,\n      onPointerUp,\n      isNearestDatum\n    } = _ref3;\n    const handlers = {\n      onPointerMove,\n      onPointerOut,\n      onPointerUp\n    };\n\n    if (tooltipGlyphComponent === 'star') {\n      return /*#__PURE__*/React.createElement(GlyphStar, Object.assign({\n        left: x,\n        top: y,\n        stroke: glyphOutline,\n        fill: color,\n        size: size * 10\n      }, handlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (tooltipGlyphComponent === 'circle') {\n      return /*#__PURE__*/React.createElement(GlyphDot, Object.assign({\n        left: x,\n        top: y,\n        stroke: glyphOutline,\n        fill: color,\n        r: size\n      }, handlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (tooltipGlyphComponent === 'cross') {\n      return /*#__PURE__*/React.createElement(GlyphCross, Object.assign({\n        left: x,\n        top: y,\n        stroke: glyphOutline,\n        fill: color,\n        size: size * 10\n      }, handlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"text\", Object.assign({\n      x: x,\n      y: y,\n      dx: \"-0.75em\",\n      dy: \"0.25em\",\n      fontSize: 14\n    }, handlers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }), isNearestDatum ? '🍍' : '🍌');\n  }, [tooltipGlyphComponent, glyphOutline]); // for series that support it, return a colorAccessor which returns a custom color if the datum is selected\n\n  const colorAccessorFactory = useCallback(dataKey => d => annotationDataKey === dataKey && d === data[annotationDataIndex] ? `url(#${selectedDatumPatternId})` : null, [annotationDataIndex, annotationDataKey]);\n  const accessors = useMemo(() => ({\n    x: {\n      'San Francisco': renderHorizontally ? negativeValues ? getNegativeSfTemperature : getSfTemperature : getDate,\n      'New York': renderHorizontally ? getNyTemperature : getDate,\n      Austin: renderHorizontally ? getAustinTemperature : getDate\n    },\n    y: {\n      'San Francisco': renderHorizontally ? getDate : negativeValues ? getNegativeSfTemperature : getSfTemperature,\n      'New York': renderHorizontally ? getDate : getNyTemperature,\n      Austin: renderHorizontally ? getDate : getAustinTemperature\n    },\n    date: getDate\n  }), [renderHorizontally, negativeValues]);\n  const config = useMemo(() => ({\n    x: renderHorizontally ? temperatureScaleConfig : dateScaleConfig,\n    y: renderHorizontally ? dateScaleConfig : temperatureScaleConfig\n  }), [renderHorizontally]); // cannot snap to a stack position\n\n  const canSnapTooltipToDatum = renderBarStackOrGroup !== 'barstack' && renderAreaLineOrStack !== 'areastack';\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    accessors,\n    animationTrajectory,\n    annotationDataKey,\n    annotationDatum: data[annotationDataIndex],\n    annotationLabelPosition,\n    annotationType,\n    colorAccessorFactory,\n    config,\n    curve: curveType === 'cardinal' && curveCardinal || curveType === 'step' && curveStep || curveLinear,\n    data: fewerDatum ? missingValues ? dataSmallMissingValues : dataSmall : missingValues ? dataMissingValues : data,\n    editAnnotationLabelPosition,\n    numTicks,\n    renderBarGroup: renderBarStackOrGroup === 'bargroup',\n    renderBarSeries: renderBarStackOrGroup === 'bar',\n    renderBarStack: renderBarStackOrGroup === 'barstack',\n    renderGlyphSeries,\n    renderGlyph,\n    enableTooltipGlyph,\n    renderTooltipGlyph,\n    renderHorizontally,\n    renderAreaSeries: renderAreaLineOrStack === 'area',\n    renderAreaStack: renderAreaLineOrStack === 'areastack',\n    renderLineSeries: renderAreaLineOrStack === 'line',\n    setAnnotationDataIndex,\n    setAnnotationDataKey,\n    setAnnotationLabelPosition,\n    sharedTooltip,\n    showGridColumns,\n    showGridRows,\n    showHorizontalCrosshair,\n    showTooltip,\n    showVerticalCrosshair,\n    snapTooltipToDatumX: canSnapTooltipToDatum && snapTooltipToDatumX,\n    snapTooltipToDatumY: canSnapTooltipToDatum && snapTooltipToDatumY,\n    stackOffset,\n    theme,\n    xAxisOrientation,\n    yAxisOrientation,\n    ...getAnimatedOrUnanimatedComponents(useAnimatedComponents)\n  }), /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"pattern-lines\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PatternLines, {\n    id: selectedDatumPatternId,\n    width: 6,\n    height: 6,\n    orientation: ['diagonalRightToLeft'],\n    stroke: theme === null || theme === void 0 ? void 0 : theme.axisStyles.x.bottom.axisLine.stroke,\n    strokeWidth: 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, \"data\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setNegativeValues(!negativeValues),\n    checked: negativeValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }), \"negative values (SF)\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setMissingValues(!missingValues),\n    checked: missingValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 25\n    }\n  }), \"missing values\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setFewerDatum(!fewerDatum),\n    checked: fewerDatum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 25\n    }\n  }), \"fewer datum\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, \"theme\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setTheme(lightTheme),\n    checked: theme === lightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }), \"light\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setTheme(darkTheme),\n    checked: theme === darkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }), \"dark\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 21\n    }\n  }, \"series orientation\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setRenderHorizontally(false),\n    checked: !renderHorizontally,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 25\n    }\n  }), \"vertical\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setRenderHorizontally(true),\n    checked: renderHorizontally,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 25\n    }\n  }), \"horizontal\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 21\n    }\n  }, \"line series\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => {\n      if (renderBarStackOrGroup === 'barstack' || renderBarStackOrGroup === 'bargroup') {\n        setRenderBarStackOrGroup('none');\n      }\n\n      setRenderAreaLineOrStack('line');\n    },\n    checked: renderAreaLineOrStack === 'line',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }), \"line\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => {\n      if (renderBarStackOrGroup === 'barstack' || renderBarStackOrGroup === 'bargroup') {\n        setRenderBarStackOrGroup('none');\n      }\n\n      setRenderAreaLineOrStack('area');\n    },\n    checked: renderAreaLineOrStack === 'area',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }), \"area\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => {\n      setRenderBarStackOrGroup('none');\n      setRenderAreaLineOrStack('areastack');\n    },\n    checked: renderAreaLineOrStack === 'areastack',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 25\n    }\n  }), \"area stack\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setRenderAreaLineOrStack('none'),\n    checked: renderAreaLineOrStack === 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 25\n    }\n  }), \"none\"), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 21\n    }\n  }, \"curve shape\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: renderAreaLineOrStack === 'none',\n    onChange: () => setCurveType('linear'),\n    checked: curveType === 'linear',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 25\n    }\n  }), \"linear\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: renderAreaLineOrStack === 'none',\n    onChange: () => setCurveType('cardinal'),\n    checked: curveType === 'cardinal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 25\n    }\n  }), \"cardinal (smooth)\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: renderAreaLineOrStack === 'none',\n    onChange: () => setCurveType('step'),\n    checked: curveType === 'step',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 25\n    }\n  }), \"step\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 21\n    }\n  }, \"glyph series\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setRenderGlyphSeries(!renderGlyphSeries),\n    checked: renderGlyphSeries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 25\n    }\n  }), \"render glyphs\"), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: !renderGlyphSeries,\n    onChange: () => setGlyphComponent('circle'),\n    checked: glyphComponent === 'circle',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 25\n    }\n  }), \"circle\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: !renderGlyphSeries,\n    onChange: () => setGlyphComponent('star'),\n    checked: glyphComponent === 'star',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 25\n    }\n  }), \"star\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: !renderGlyphSeries,\n    onChange: () => setGlyphComponent('cross'),\n    checked: glyphComponent === 'cross',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 25\n    }\n  }), \"cross\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: !renderGlyphSeries,\n    onChange: () => setGlyphComponent('🍍'),\n    checked: glyphComponent === '🍍',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 25\n    }\n  }), \"\\uD83C\\uDF4D\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 21\n    }\n  }, \"bar series\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => {\n      if (renderAreaLineOrStack === 'areastack') {\n        setRenderAreaLineOrStack('none');\n      }\n\n      setRenderBarStackOrGroup('bar');\n    },\n    checked: renderBarStackOrGroup === 'bar',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 25\n    }\n  }), \"bar\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => {\n      setRenderAreaLineOrStack('none');\n      setRenderBarStackOrGroup('barstack');\n    },\n    checked: renderBarStackOrGroup === 'barstack',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 25\n    }\n  }), \"bar stack\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => {\n      setRenderAreaLineOrStack('none');\n      setRenderBarStackOrGroup('bargroup');\n    },\n    checked: renderBarStackOrGroup === 'bargroup',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 25\n    }\n  }), \"bar group\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setRenderBarStackOrGroup('none'),\n    checked: renderBarStackOrGroup === 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 25\n    }\n  }), \"none\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 21\n    }\n  }, \"stack series offset\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: renderAreaLineOrStack !== 'areastack' && renderBarStackOrGroup !== 'barstack',\n    onChange: () => setStackOffset(undefined),\n    checked: stackOffset == null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 25\n    }\n  }), \"auto (zero-baseline)\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: renderAreaLineOrStack !== 'areastack' && renderBarStackOrGroup !== 'barstack',\n    onChange: () => setStackOffset('expand'),\n    checked: stackOffset === 'expand',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 25\n    }\n  }), \"expand (values sum to 1)\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: renderAreaLineOrStack !== 'areastack' && renderBarStackOrGroup !== 'barstack',\n    onChange: () => setStackOffset('wiggle'),\n    checked: stackOffset === 'wiggle',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 25\n    }\n  }), \"wiggle (stream graph)\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 21\n    }\n  }, \"tooltip\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setShowTooltip(!showTooltip),\n    checked: showTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 25\n    }\n  }), \"show tooltip\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    disabled: !showTooltip || !canSnapTooltipToDatum,\n    onChange: () => setSnapTooltipToDatumX(!snapTooltipToDatumX),\n    checked: showTooltip && snapTooltipToDatumX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 25\n    }\n  }), \"snap tooltip to datum x\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    disabled: !showTooltip || !canSnapTooltipToDatum,\n    onChange: () => setSnapTooltipToDatumY(!snapTooltipToDatumY),\n    checked: showTooltip && snapTooltipToDatumY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 25\n    }\n  }), \"snap tooltip to datum y\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    disabled: !showTooltip,\n    onChange: () => setShowVerticalCrosshair(!showVerticalCrosshair),\n    checked: showTooltip && showVerticalCrosshair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 25\n    }\n  }), \"vertical crosshair\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    disabled: !showTooltip,\n    onChange: () => setShowHorizontalCrosshair(!showHorizontalCrosshair),\n    checked: showTooltip && showHorizontalCrosshair,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 25\n    }\n  }), \"horizontal crosshair\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    disabled: !showTooltip,\n    onChange: () => setSharedTooltip(!sharedTooltip),\n    checked: showTooltip && sharedTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 25\n    }\n  }), \"shared tooltip\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 21\n    }\n  }, \"tooltip gliph\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setEnableTooltipGlyph(!enableTooltipGlyph),\n    disabled: !canSnapTooltipToDatum,\n    checked: enableTooltipGlyph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 25\n    }\n  }), \"show custom tooltip gliph\"), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: !enableTooltipGlyph || !canSnapTooltipToDatum,\n    onChange: () => setTooltipGlyphComponent('circle'),\n    checked: tooltipGlyphComponent === 'circle',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 25\n    }\n  }), \"circle\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: !enableTooltipGlyph || !canSnapTooltipToDatum,\n    onChange: () => setTooltipGlyphComponent('star'),\n    checked: tooltipGlyphComponent === 'star',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 25\n    }\n  }), \"star\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: !enableTooltipGlyph || !canSnapTooltipToDatum,\n    onChange: () => setTooltipGlyphComponent('cross'),\n    checked: tooltipGlyphComponent === 'cross',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 25\n    }\n  }), \"cross\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    disabled: !enableTooltipGlyph || !canSnapTooltipToDatum,\n    onChange: () => setTooltipGlyphComponent('🍍'),\n    checked: tooltipGlyphComponent === '🍍',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 25\n    }\n  }), \"\\uD83C\\uDF4D\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 21\n    }\n  }, \"annotation\"), \" (click chart to update)\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnnotationDataKey(null),\n    checked: annotationDataKey == null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 25\n    }\n  }), \"none\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnnotationDataKey('San Francisco'),\n    checked: annotationDataKey === 'San Francisco',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 25\n    }\n  }), \"SF\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnnotationDataKey('New York'),\n    checked: annotationDataKey === 'New York',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 25\n    }\n  }), \"NY\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnnotationDataKey('Austin'),\n    checked: annotationDataKey === 'Austin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 25\n    }\n  }), \"Austin\"), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 21\n    }\n  }, \"type\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnnotationType('circle'),\n    checked: annotationType === 'circle',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 25\n    }\n  }), \"circle\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnnotationType('line'),\n    checked: annotationType === 'line',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 25\n    }\n  }), \"line\"), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setEditAnnotationLabelPosition(!editAnnotationLabelPosition),\n    checked: editAnnotationLabelPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 25\n    }\n  }), \"edit label position\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 21\n    }\n  }, \"axes\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setXAxisOrientation('bottom'),\n    checked: xAxisOrientation === 'bottom',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 25\n    }\n  }), \"bottom\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setXAxisOrientation('top'),\n    checked: xAxisOrientation === 'top',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 25\n    }\n  }), \"top\"), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setYAxisOrientation('left'),\n    checked: yAxisOrientation === 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 25\n    }\n  }), \"left\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setYAxisOrientation('right'),\n    checked: yAxisOrientation === 'right',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 25\n    }\n  }), \"right\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 21\n    }\n  }, \"grid\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setGridProps([true, false]),\n    checked: showGridRows && !showGridColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 25\n    }\n  }), \"rows\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setGridProps([false, true]),\n    checked: !showGridRows && showGridColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 25\n    }\n  }), \"columns\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setGridProps([true, true]),\n    checked: showGridRows && showGridColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 25\n    }\n  }), \"both\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setGridProps([false, false]),\n    checked: !showGridRows && !showGridColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 25\n    }\n  }), \"none\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setUseAnimatedComponents(!useAnimatedComponents),\n    checked: useAnimatedComponents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 25\n    }\n  }), \"use animated components\"), useAnimatedComponents && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 29\n    }\n  }, \"axis + grid animation\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnimationTrajectory('center'),\n    checked: animationTrajectory === 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 33\n    }\n  }), \"from center\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnimationTrajectory('outside'),\n    checked: animationTrajectory === 'outside',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 33\n    }\n  }), \"from outside\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnimationTrajectory('min'),\n    checked: animationTrajectory === 'min',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 33\n    }\n  }), \"from min\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onChange: () => setAnimationTrajectory('max'),\n    checked: animationTrajectory === 'max',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 33\n    }\n  }), \"from max\")))));\n}","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/analysis/ExampleControls.tsx"],"names":["React","useCallback","useMemo","useState","lightTheme","darkTheme","PatternLines","cityTemperature","GlyphCross","GlyphDot","GlyphStar","curveLinear","curveStep","curveCardinal","userPrefersReducedMotion","getAnimatedOrUnanimatedComponents","dateScaleConfig","type","paddingInner","temperatureScaleConfig","numTicks","data","slice","dataMissingValues","map","d","i","Austin","dataSmall","dataSmallMissingValues","getDate","date","getSfTemperature","Number","getNegativeSfTemperature","getNyTemperature","getAustinTemperature","defaultAnnotationDataIndex","selectedDatumPatternId","ExampleControls","children","useAnimatedComponents","setUseAnimatedComponents","theme","setTheme","animationTrajectory","setAnimationTrajectory","gridProps","setGridProps","showGridRows","showGridColumns","xAxisOrientation","setXAxisOrientation","yAxisOrientation","setYAxisOrientation","renderHorizontally","setRenderHorizontally","showTooltip","setShowTooltip","annotationDataKey","setAnnotationDataKey","annotationType","setAnnotationType","showVerticalCrosshair","setShowVerticalCrosshair","showHorizontalCrosshair","setShowHorizontalCrosshair","snapTooltipToDatumX","setSnapTooltipToDatumX","snapTooltipToDatumY","setSnapTooltipToDatumY","sharedTooltip","setSharedTooltip","renderBarStackOrGroup","setRenderBarStackOrGroup","renderAreaLineOrStack","setRenderAreaLineOrStack","stackOffset","setStackOffset","renderGlyphSeries","setRenderGlyphSeries","editAnnotationLabelPosition","setEditAnnotationLabelPosition","annotationLabelPosition","setAnnotationLabelPosition","dx","dy","annotationDataIndex","setAnnotationDataIndex","negativeValues","setNegativeValues","fewerDatum","setFewerDatum","missingValues","setMissingValues","glyphComponent","setGlyphComponent","curveType","setCurveType","glyphOutline","gridStyles","stroke","renderGlyph","size","color","onPointerMove","onPointerOut","onPointerUp","handlers","enableTooltipGlyph","setEnableTooltipGlyph","tooltipGlyphComponent","setTooltipGlyphComponent","renderTooltipGlyph","x","y","isNearestDatum","colorAccessorFactory","dataKey","accessors","config","canSnapTooltipToDatum","annotationDatum","curve","renderBarGroup","renderBarSeries","renderBarStack","renderAreaSeries","renderAreaStack","renderLineSeries","axisStyles","bottom","axisLine","undefined"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { lightTheme, darkTheme, XYChartTheme } from '@visx/xychart';\nimport { PatternLines } from '@visx/pattern';\nimport { GlyphProps } from '@visx/xychart/lib/types';\nimport { AnimationTrajectory } from '@visx/react-spring/lib/types';\nimport cityTemperature, { CityTemperature } from '@visx/mock-data/lib/mocks/cityTemperature';\nimport { GlyphCross, GlyphDot, GlyphStar } from '@visx/glyph';\nimport { curveLinear, curveStep, curveCardinal } from '@visx/curve';\nimport { RenderTooltipGlypProps } from '@visx/xychart/lib/components/Tooltip';\nimport userPrefersReducedMotion from './userPrefersReducedMotion';\nimport getAnimatedOrUnanimatedComponents from './getAnimatedOrUnanimatedComponents';\n\nconst dateScaleConfig = { type: 'band', paddingInner: 0.3 } as const;\nconst temperatureScaleConfig = { type: 'linear' } as const;\nconst numTicks = 4;\nconst data = cityTemperature.slice(225, 275);\nconst dataMissingValues = data.map((d, i) =>\n    i === 10 || i === 11\n        ? { ...d, 'San Francisco': 'nope', 'New York': 'notanumber', Austin: 'null' }\n        : d,\n);\nconst dataSmall = data.slice(0, 15);\nconst dataSmallMissingValues = dataMissingValues.slice(0, 15);\nconst getDate = (d: CityTemperature) => d.date;\nconst getSfTemperature = (d: CityTemperature) => Number(d['San Francisco']);\nconst getNegativeSfTemperature = (d: CityTemperature) => -getSfTemperature(d);\nconst getNyTemperature = (d: CityTemperature) => Number(d['New York']);\nconst getAustinTemperature = (d: CityTemperature) => Number(d.Austin);\nconst defaultAnnotationDataIndex = 13;\nconst selectedDatumPatternId = 'xychart-selected-datum';\n\ntype Accessor = (d: CityTemperature) => number | string;\n\ninterface Accessors\n{\n    'San Francisco': Accessor;\n    'New York': Accessor;\n    Austin: Accessor;\n}\n\ntype DataKey = keyof Accessors;\n\ntype SimpleScaleConfig = { type: 'band' | 'linear'; paddingInner?: number };\n\ntype ProvidedProps = {\n    accessors: {\n        x: Accessors;\n        y: Accessors;\n        date: Accessor;\n    };\n    animationTrajectory?: AnimationTrajectory;\n    annotationDataKey: DataKey | null;\n    annotationDatum?: CityTemperature;\n    annotationLabelPosition: { dx: number; dy: number };\n    annotationType?: 'line' | 'circle';\n    colorAccessorFactory: (key: DataKey) => (d: CityTemperature) => string | null;\n    config: {\n        x: SimpleScaleConfig;\n        y: SimpleScaleConfig;\n    };\n    curve: typeof curveLinear | typeof curveCardinal | typeof curveStep;\n    data: CityTemperature[];\n    editAnnotationLabelPosition: boolean;\n    numTicks: number;\n    setAnnotationDataIndex: (index: number) => void;\n    setAnnotationDataKey: (key: DataKey | null) => void;\n    setAnnotationLabelPosition: (position: { dx: number; dy: number }) => void;\n    renderAreaSeries: boolean;\n    renderAreaStack: boolean;\n    renderBarGroup: boolean;\n    renderBarSeries: boolean;\n    renderBarStack: boolean;\n    renderGlyph: React.FC<GlyphProps<CityTemperature>>;\n    renderGlyphSeries: boolean;\n    enableTooltipGlyph: boolean;\n    renderTooltipGlyph: React.FC<RenderTooltipGlypProps<CityTemperature>>;\n    renderHorizontally: boolean;\n    renderLineSeries: boolean;\n    sharedTooltip: boolean;\n    showGridColumns: boolean;\n    showGridRows: boolean;\n    showHorizontalCrosshair: boolean;\n    showTooltip: boolean;\n    showVerticalCrosshair: boolean;\n    snapTooltipToDatumX: boolean;\n    snapTooltipToDatumY: boolean;\n    stackOffset?: 'wiggle' | 'expand' | 'diverging' | 'silhouette';\n    theme: XYChartTheme;\n    xAxisOrientation: 'top' | 'bottom';\n    yAxisOrientation: 'left' | 'right';\n} & ReturnType<typeof getAnimatedOrUnanimatedComponents>;\n\ntype ControlsProps = {\n    children: (props: ProvidedProps) => React.ReactNode;\n};\n\nexport default function ExampleControls({ children }: ControlsProps)\n{\n    const [useAnimatedComponents, setUseAnimatedComponents] = useState(!userPrefersReducedMotion());\n    const [theme, setTheme] = useState<XYChartTheme>(darkTheme);\n    const [animationTrajectory, setAnimationTrajectory] = useState<AnimationTrajectory | undefined>(\n        'center',\n    );\n    const [gridProps, setGridProps] = useState<[boolean, boolean]>([false, false]);\n    const [showGridRows, showGridColumns] = gridProps;\n    const [xAxisOrientation, setXAxisOrientation] = useState<'top' | 'bottom'>('bottom');\n    const [yAxisOrientation, setYAxisOrientation] = useState<'left' | 'right'>('right');\n    const [renderHorizontally, setRenderHorizontally] = useState(false);\n    const [showTooltip, setShowTooltip] = useState(true);\n    const [annotationDataKey, setAnnotationDataKey] =\n        useState<ProvidedProps['annotationDataKey']>(null);\n    const [annotationType, setAnnotationType] = useState<ProvidedProps['annotationType']>('circle');\n    const [showVerticalCrosshair, setShowVerticalCrosshair] = useState(true);\n    const [showHorizontalCrosshair, setShowHorizontalCrosshair] = useState(false);\n    const [snapTooltipToDatumX, setSnapTooltipToDatumX] = useState(true);\n    const [snapTooltipToDatumY, setSnapTooltipToDatumY] = useState(true);\n    const [sharedTooltip, setSharedTooltip] = useState(true);\n    const [renderBarStackOrGroup, setRenderBarStackOrGroup] = useState<\n        'bar' | 'barstack' | 'bargroup' | 'none'\n    >('none');\n    const [renderAreaLineOrStack, setRenderAreaLineOrStack] = useState<\n        'line' | 'area' | 'areastack' | 'none'\n    >('areastack');\n    const [stackOffset, setStackOffset] = useState<ProvidedProps['stackOffset']>();\n    const [renderGlyphSeries, setRenderGlyphSeries] = useState(false);\n    const [editAnnotationLabelPosition, setEditAnnotationLabelPosition] = useState(false);\n    const [annotationLabelPosition, setAnnotationLabelPosition] = useState({ dx: -40, dy: -20 });\n    const [annotationDataIndex, setAnnotationDataIndex] = useState(defaultAnnotationDataIndex);\n    const [negativeValues, setNegativeValues] = useState(false);\n    const [fewerDatum, setFewerDatum] = useState(false);\n    const [missingValues, setMissingValues] = useState(false);\n    const [glyphComponent, setGlyphComponent] = useState<'star' | 'cross' | 'circle' | '🍍'>('star');\n    const [curveType, setCurveType] = useState<'linear' | 'cardinal' | 'step'>('linear');\n    const glyphOutline = theme.gridStyles.stroke;\n    const renderGlyph = useCallback(\n        ({ size, color, onPointerMove, onPointerOut, onPointerUp }: GlyphProps<CityTemperature>) =>\n        {\n            const handlers = { onPointerMove, onPointerOut, onPointerUp };\n            if (glyphComponent === 'star')\n            {\n                return <GlyphStar stroke={glyphOutline} fill={color} size={size * 10} {...handlers} />;\n            }\n            if (glyphComponent === 'circle')\n            {\n                return <GlyphDot stroke={glyphOutline} fill={color} r={size / 2} {...handlers} />;\n            }\n            if (glyphComponent === 'cross')\n            {\n                return <GlyphCross stroke={glyphOutline} fill={color} size={size * 10} {...handlers} />;\n            }\n            return (\n                <text dx=\"-0.75em\" dy=\"0.25em\" fontSize={14} {...handlers}>\n                    🍍\n                </text>\n            );\n        },\n        [glyphComponent, glyphOutline],\n    );\n    const [enableTooltipGlyph, setEnableTooltipGlyph] = useState(false);\n    const [tooltipGlyphComponent, setTooltipGlyphComponent] = useState<\n        'star' | 'cross' | 'circle' | '🍍'\n    >('star');\n    const renderTooltipGlyph = useCallback(\n        ({\n            x,\n            y,\n            size,\n            color,\n            onPointerMove,\n            onPointerOut,\n            onPointerUp,\n            isNearestDatum,\n        }: RenderTooltipGlypProps<CityTemperature>) =>\n        {\n            const handlers = { onPointerMove, onPointerOut, onPointerUp };\n            if (tooltipGlyphComponent === 'star')\n            {\n                return (\n                    <GlyphStar\n                        left={x}\n                        top={y}\n                        stroke={glyphOutline}\n                        fill={color}\n                        size={size * 10}\n                        {...handlers}\n                    />\n                );\n            }\n            if (tooltipGlyphComponent === 'circle')\n            {\n                return (\n                    <GlyphDot left={x} top={y} stroke={glyphOutline} fill={color} r={size} {...handlers} />\n                );\n            }\n            if (tooltipGlyphComponent === 'cross')\n            {\n                return (\n                    <GlyphCross\n                        left={x}\n                        top={y}\n                        stroke={glyphOutline}\n                        fill={color}\n                        size={size * 10}\n                        {...handlers}\n                    />\n                );\n            }\n            return (\n                <text x={x} y={y} dx=\"-0.75em\" dy=\"0.25em\" fontSize={14} {...handlers}>\n                    {isNearestDatum ? '🍍' : '🍌'}\n                </text>\n            );\n        },\n        [tooltipGlyphComponent, glyphOutline],\n    );\n    // for series that support it, return a colorAccessor which returns a custom color if the datum is selected\n    const colorAccessorFactory = useCallback(\n        (dataKey: DataKey) => (d: CityTemperature) =>\n            annotationDataKey === dataKey && d === data[annotationDataIndex]\n                ? `url(#${selectedDatumPatternId})`\n                : null,\n        [annotationDataIndex, annotationDataKey],\n    );\n\n    const accessors = useMemo(\n        () => ({\n            x: {\n                'San Francisco': renderHorizontally\n                    ? negativeValues\n                        ? getNegativeSfTemperature\n                        : getSfTemperature\n                    : getDate,\n                'New York': renderHorizontally ? getNyTemperature : getDate,\n                Austin: renderHorizontally ? getAustinTemperature : getDate,\n            },\n            y: {\n                'San Francisco': renderHorizontally\n                    ? getDate\n                    : negativeValues\n                        ? getNegativeSfTemperature\n                        : getSfTemperature,\n                'New York': renderHorizontally ? getDate : getNyTemperature,\n                Austin: renderHorizontally ? getDate : getAustinTemperature,\n            },\n            date: getDate,\n        }),\n        [renderHorizontally, negativeValues],\n    );\n\n    const config = useMemo(\n        () => ({\n            x: renderHorizontally ? temperatureScaleConfig : dateScaleConfig,\n            y: renderHorizontally ? dateScaleConfig : temperatureScaleConfig,\n        }),\n        [renderHorizontally],\n    );\n\n    // cannot snap to a stack position\n    const canSnapTooltipToDatum =\n        renderBarStackOrGroup !== 'barstack' && renderAreaLineOrStack !== 'areastack';\n\n    return (\n        <>\n            {children({\n                accessors,\n                animationTrajectory,\n                annotationDataKey,\n                annotationDatum: data[annotationDataIndex],\n                annotationLabelPosition,\n                annotationType,\n                colorAccessorFactory,\n                config,\n                curve:\n                    (curveType === 'cardinal' && curveCardinal) ||\n                    (curveType === 'step' && curveStep) ||\n                    curveLinear,\n                data: fewerDatum\n                    ? missingValues\n                        ? dataSmallMissingValues\n                        : dataSmall\n                    : missingValues\n                        ? dataMissingValues\n                        : data,\n                editAnnotationLabelPosition,\n                numTicks,\n                renderBarGroup: renderBarStackOrGroup === 'bargroup',\n                renderBarSeries: renderBarStackOrGroup === 'bar',\n                renderBarStack: renderBarStackOrGroup === 'barstack',\n                renderGlyphSeries,\n                renderGlyph,\n                enableTooltipGlyph,\n                renderTooltipGlyph,\n                renderHorizontally,\n                renderAreaSeries: renderAreaLineOrStack === 'area',\n                renderAreaStack: renderAreaLineOrStack === 'areastack',\n                renderLineSeries: renderAreaLineOrStack === 'line',\n                setAnnotationDataIndex,\n                setAnnotationDataKey,\n                setAnnotationLabelPosition,\n                sharedTooltip,\n                showGridColumns,\n                showGridRows,\n                showHorizontalCrosshair,\n                showTooltip,\n                showVerticalCrosshair,\n                snapTooltipToDatumX: canSnapTooltipToDatum && snapTooltipToDatumX,\n                snapTooltipToDatumY: canSnapTooltipToDatum && snapTooltipToDatumY,\n                stackOffset,\n                theme,\n                xAxisOrientation,\n                yAxisOrientation,\n                ...getAnimatedOrUnanimatedComponents(useAnimatedComponents),\n            })}\n       \n            <svg className=\"pattern-lines\">\n                <PatternLines\n                    id={selectedDatumPatternId}\n                    width={6}\n                    height={6}\n                    orientation={['diagonalRightToLeft']}\n                    stroke={theme?.axisStyles.x.bottom.axisLine.stroke}\n                    strokeWidth={1.5}\n                />\n            </svg>\n            <div className=\"controls\">\n                <div>\n                    <strong>data</strong>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => setNegativeValues(!negativeValues)}\n                            checked={negativeValues}\n                        />\n                        negative values (SF)\n                    </label>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => setMissingValues(!missingValues)}\n                            checked={missingValues}\n                        />\n                        missing values\n                    </label>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => setFewerDatum(!fewerDatum)}\n                            checked={fewerDatum}\n                        />\n                        fewer datum\n                    </label>\n                </div>\n\n                <div>\n                    <strong>theme</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setTheme(lightTheme)}\n                            checked={theme === lightTheme}\n                        />\n                        light\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setTheme(darkTheme)}\n                            checked={theme === darkTheme}\n                        />\n                        dark\n                    </label>\n                </div>\n\n                <br />\n\n                <div>\n                    <strong>series orientation</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setRenderHorizontally(false)}\n                            checked={!renderHorizontally}\n                        />\n                        vertical\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setRenderHorizontally(true)}\n                            checked={renderHorizontally}\n                        />\n                        horizontal\n                    </label>\n                </div>\n                <div>\n                    <strong>line series</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() =>\n                            {\n                                if (renderBarStackOrGroup === 'barstack' || renderBarStackOrGroup === 'bargroup')\n                                {\n                                    setRenderBarStackOrGroup('none');\n                                }\n                                setRenderAreaLineOrStack('line');\n                            }}\n                            checked={renderAreaLineOrStack === 'line'}\n                        />\n                        line\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() =>\n                            {\n                                if (renderBarStackOrGroup === 'barstack' || renderBarStackOrGroup === 'bargroup')\n                                {\n                                    setRenderBarStackOrGroup('none');\n                                }\n                                setRenderAreaLineOrStack('area');\n                            }}\n                            checked={renderAreaLineOrStack === 'area'}\n                        />\n                        area\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() =>\n                            {\n                                setRenderBarStackOrGroup('none');\n                                setRenderAreaLineOrStack('areastack');\n                            }}\n                            checked={renderAreaLineOrStack === 'areastack'}\n                        />\n                        area stack\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setRenderAreaLineOrStack('none')}\n                            checked={renderAreaLineOrStack === 'none'}\n                        />\n                        none\n                    </label>\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    <strong>curve shape</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={renderAreaLineOrStack === 'none'}\n                            onChange={() => setCurveType('linear')}\n                            checked={curveType === 'linear'}\n                        />\n                        linear\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={renderAreaLineOrStack === 'none'}\n                            onChange={() => setCurveType('cardinal')}\n                            checked={curveType === 'cardinal'}\n                        />\n                        cardinal (smooth)\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={renderAreaLineOrStack === 'none'}\n                            onChange={() => setCurveType('step')}\n                            checked={curveType === 'step'}\n                        />\n                        step\n                    </label>\n                </div>\n            \n                <div>\n                    <strong>glyph series</strong>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => setRenderGlyphSeries(!renderGlyphSeries)}\n                            checked={renderGlyphSeries}\n                        />\n                        render glyphs\n                    </label>\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={!renderGlyphSeries}\n                            onChange={() => setGlyphComponent('circle')}\n                            checked={glyphComponent === 'circle'}\n                        />\n                        circle\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={!renderGlyphSeries}\n                            onChange={() => setGlyphComponent('star')}\n                            checked={glyphComponent === 'star'}\n                        />\n                        star\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={!renderGlyphSeries}\n                            onChange={() => setGlyphComponent('cross')}\n                            checked={glyphComponent === 'cross'}\n                        />\n                        cross\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={!renderGlyphSeries}\n                            onChange={() => setGlyphComponent('🍍')}\n                            checked={glyphComponent === '🍍'}\n                        />\n                        🍍\n                    </label>\n                </div>\n                <div>\n                    <strong>bar series</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() =>\n                            {\n                                if (renderAreaLineOrStack === 'areastack')\n                                {\n                                    setRenderAreaLineOrStack('none');\n                                }\n                                setRenderBarStackOrGroup('bar');\n                            }}\n                            checked={renderBarStackOrGroup === 'bar'}\n                        />\n                        bar\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() =>\n                            {\n                                setRenderAreaLineOrStack('none');\n                                setRenderBarStackOrGroup('barstack');\n                            }}\n                            checked={renderBarStackOrGroup === 'barstack'}\n                        />\n                        bar stack\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() =>\n                            {\n                                setRenderAreaLineOrStack('none');\n                                setRenderBarStackOrGroup('bargroup');\n                            }}\n                            checked={renderBarStackOrGroup === 'bargroup'}\n                        />\n                        bar group\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setRenderBarStackOrGroup('none')}\n                            checked={renderBarStackOrGroup === 'none'}\n                        />\n                        none\n                    </label>\n                </div>\n                <div>\n                    <strong>stack series offset</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={\n                                renderAreaLineOrStack !== 'areastack' && renderBarStackOrGroup !== 'barstack'\n                            }\n                            onChange={() => setStackOffset(undefined)}\n                            checked={stackOffset == null}\n                        />\n                        auto (zero-baseline)\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={\n                                renderAreaLineOrStack !== 'areastack' && renderBarStackOrGroup !== 'barstack'\n                            }\n                            onChange={() => setStackOffset('expand')}\n                            checked={stackOffset === 'expand'}\n                        />\n                        expand (values sum to 1)\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={\n                                renderAreaLineOrStack !== 'areastack' && renderBarStackOrGroup !== 'barstack'\n                            }\n                            onChange={() => setStackOffset('wiggle')}\n                            checked={stackOffset === 'wiggle'}\n                        />\n                        wiggle (stream graph)\n                    </label>\n                </div>\n\n                <br />\n     \n                <div>\n                    <strong>tooltip</strong>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => setShowTooltip(!showTooltip)}\n                            checked={showTooltip}\n                        />\n                        show tooltip\n                    </label>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            disabled={!showTooltip || !canSnapTooltipToDatum}\n                            onChange={() => setSnapTooltipToDatumX(!snapTooltipToDatumX)}\n                            checked={showTooltip && snapTooltipToDatumX}\n                        />\n                        snap tooltip to datum x\n                    </label>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            disabled={!showTooltip || !canSnapTooltipToDatum}\n                            onChange={() => setSnapTooltipToDatumY(!snapTooltipToDatumY)}\n                            checked={showTooltip && snapTooltipToDatumY}\n                        />\n                        snap tooltip to datum y\n                    </label>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            disabled={!showTooltip}\n                            onChange={() => setShowVerticalCrosshair(!showVerticalCrosshair)}\n                            checked={showTooltip && showVerticalCrosshair}\n                        />\n                        vertical crosshair\n                    </label>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            disabled={!showTooltip}\n                            onChange={() => setShowHorizontalCrosshair(!showHorizontalCrosshair)}\n                            checked={showTooltip && showHorizontalCrosshair}\n                        />\n                        horizontal crosshair\n                    </label>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            disabled={!showTooltip}\n                            onChange={() => setSharedTooltip(!sharedTooltip)}\n                            checked={showTooltip && sharedTooltip}\n                        />\n                        shared tooltip\n                    </label>\n                </div>\n                <div>\n                    <strong>tooltip gliph</strong>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => setEnableTooltipGlyph(!enableTooltipGlyph)}\n                            disabled={!canSnapTooltipToDatum}\n                            checked={enableTooltipGlyph}\n                        />\n                        show custom tooltip gliph\n                    </label>\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={!enableTooltipGlyph || !canSnapTooltipToDatum}\n                            onChange={() => setTooltipGlyphComponent('circle')}\n                            checked={tooltipGlyphComponent === 'circle'}\n                        />\n                        circle\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={!enableTooltipGlyph || !canSnapTooltipToDatum}\n                            onChange={() => setTooltipGlyphComponent('star')}\n                            checked={tooltipGlyphComponent === 'star'}\n                        />\n                        star\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={!enableTooltipGlyph || !canSnapTooltipToDatum}\n                            onChange={() => setTooltipGlyphComponent('cross')}\n                            checked={tooltipGlyphComponent === 'cross'}\n                        />\n                        cross\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            disabled={!enableTooltipGlyph || !canSnapTooltipToDatum}\n                            onChange={() => setTooltipGlyphComponent('🍍')}\n                            checked={tooltipGlyphComponent === '🍍'}\n                        />\n                        🍍\n                    </label>\n                </div>\n            \n                <div>\n                    <strong>annotation</strong> (click chart to update)\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setAnnotationDataKey(null)}\n                            checked={annotationDataKey == null}\n                        />\n                        none\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setAnnotationDataKey('San Francisco')}\n                            checked={annotationDataKey === 'San Francisco'}\n                        />\n                        SF\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setAnnotationDataKey('New York')}\n                            checked={annotationDataKey === 'New York'}\n                        />\n                        NY\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setAnnotationDataKey('Austin')}\n                            checked={annotationDataKey === 'Austin'}\n                        />\n                        Austin\n                    </label>\n                    &nbsp;&nbsp;&nbsp;\n                    <strong>type</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setAnnotationType('circle')}\n                            checked={annotationType === 'circle'}\n                        />\n                        circle\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setAnnotationType('line')}\n                            checked={annotationType === 'line'}\n                        />\n                        line\n                    </label>\n                    &nbsp;&nbsp;&nbsp;\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => setEditAnnotationLabelPosition(!editAnnotationLabelPosition)}\n                            checked={editAnnotationLabelPosition}\n                        />\n                        edit label position\n                    </label>\n                </div>\n\n                <br />\n\n                <div>\n                    <strong>axes</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setXAxisOrientation('bottom')}\n                            checked={xAxisOrientation === 'bottom'}\n                        />\n                        bottom\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setXAxisOrientation('top')}\n                            checked={xAxisOrientation === 'top'}\n                        />\n                        top\n                    </label>\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setYAxisOrientation('left')}\n                            checked={yAxisOrientation === 'left'}\n                        />\n                        left\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setYAxisOrientation('right')}\n                            checked={yAxisOrientation === 'right'}\n                        />\n                        right\n                    </label>\n                </div>\n\n                <div>\n                    <strong>grid</strong>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setGridProps([true, false])}\n                            checked={showGridRows && !showGridColumns}\n                        />\n                        rows\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setGridProps([false, true])}\n                            checked={!showGridRows && showGridColumns}\n                        />\n                        columns\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setGridProps([true, true])}\n                            checked={showGridRows && showGridColumns}\n                        />\n                        both\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            onChange={() => setGridProps([false, false])}\n                            checked={!showGridRows && !showGridColumns}\n                        />\n                        none\n                    </label>\n                </div>\n                {/** animation trajectory */}\n                <div>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => setUseAnimatedComponents(!useAnimatedComponents)}\n                            checked={useAnimatedComponents}\n                        />\n                        use animated components\n                    </label>\n\n                    {useAnimatedComponents && (\n                        <>\n                            &nbsp;&nbsp;&nbsp;\n                            <strong>axis + grid animation</strong>\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    onChange={() => setAnimationTrajectory('center')}\n                                    checked={animationTrajectory === 'center'}\n                                />\n                                from center\n                            </label>\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    onChange={() => setAnimationTrajectory('outside')}\n                                    checked={animationTrajectory === 'outside'}\n                                />\n                                from outside\n                            </label>\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    onChange={() => setAnimationTrajectory('min')}\n                                    checked={animationTrajectory === 'min'}\n                                />\n                                from min\n                            </label>\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    onChange={() => setAnimationTrajectory('max')}\n                                    checked={animationTrajectory === 'max'}\n                                />\n                                from max\n                            </label>\n                        </>\n                    )}\n                </div>\n            </div>\n            {/* <style jsx>{`\n        .controls {\n          font-size: 13px;\n          line-height: 1.5em;\n        }\n        .controls > div {\n          margin-bottom: 4px;\n        }\n        label {\n          font-size: 12px;\n        }\n        input[type='radio'] {\n          height: 10px;\n        }\n        .pattern-lines {\n          position: absolute;\n          pointer-events: none;\n          opacity: 0;\n        }\n      `}</style> */}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}