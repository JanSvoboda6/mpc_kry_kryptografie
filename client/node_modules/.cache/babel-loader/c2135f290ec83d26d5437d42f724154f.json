{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useMemo } from 'react';\nimport { useTransition, animated, to } from 'react-spring';\nimport getScaleBaseline from '../../../utils/getScaleBaseline';\nimport { cleanColor, colorHasUrl } from '../../../utils/cleanColorString';\n/** Memoized useTransition config */\n\nexport function useAnimatedGlyphsConfig(_ref) {\n  var xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      horizontal = _ref.horizontal;\n  var xScaleBaseline = getScaleBaseline(xScale);\n  var yScaleBaseline = getScaleBaseline(yScale);\n  return useMemo(function () {\n    return {\n      unique: true,\n      from: function from(_ref2) {\n        var x = _ref2.x,\n            y = _ref2.y,\n            color = _ref2.color;\n        return {\n          x: horizontal ? xScaleBaseline : x,\n          y: horizontal ? y : yScaleBaseline,\n          color: cleanColor(color),\n          opacity: 0\n        };\n      },\n      leave: function leave(_ref3) {\n        var x = _ref3.x,\n            y = _ref3.y,\n            color = _ref3.color;\n        return {\n          x: horizontal ? xScaleBaseline : x,\n          y: horizontal ? y : yScaleBaseline,\n          color: cleanColor(color),\n          opacity: 0\n        };\n      },\n      enter: function enter(_ref4) {\n        var x = _ref4.x,\n            y = _ref4.y,\n            color = _ref4.color;\n        return {\n          x: x,\n          y: y,\n          color: cleanColor(color),\n          opacity: 1\n        };\n      },\n      update: function update(_ref5) {\n        var x = _ref5.x,\n            y = _ref5.y,\n            color = _ref5.color;\n        return {\n          x: x,\n          y: y,\n          color: cleanColor(color),\n          opacity: 1\n        };\n      },\n      keys: function keys(glyph) {\n        return glyph.key;\n      }\n    };\n  }, [xScaleBaseline, yScaleBaseline, horizontal]);\n}\nexport default function AnimatedGlyphs(_ref6) {\n  var renderGlyph = _ref6.renderGlyph,\n      glyphs = _ref6.glyphs,\n      horizontal = _ref6.horizontal,\n      xScale = _ref6.xScale,\n      yScale = _ref6.yScale,\n      onBlur = _ref6.onBlur,\n      onFocus = _ref6.onFocus,\n      onPointerMove = _ref6.onPointerMove,\n      onPointerOut = _ref6.onPointerOut,\n      onPointerUp = _ref6.onPointerUp;\n  var animatedGlyphs = useTransition(glyphs, _extends({}, useAnimatedGlyphsConfig({\n    xScale: xScale,\n    yScale: yScale,\n    horizontal: horizontal\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, animatedGlyphs(function (_ref7, item, _ref8) {\n    var x = _ref7.x,\n        y = _ref7.y,\n        color = _ref7.color,\n        opacity = _ref7.opacity;\n    var key = _ref8.key;\n    return /*#__PURE__*/React.createElement(animated.g, {\n      key: key,\n      transform: to([x, y], function (xVal, yVal) {\n        return \"translate(\" + xVal + \", \" + yVal + \")\";\n      }),\n      color: color,\n      opacity: opacity\n    }, renderGlyph({\n      key: key,\n      datum: item.datum,\n      index: item.index,\n      x: 0,\n      y: 0,\n      size: item.size,\n      // currentColor doesn't work with url-based colors (pattern, gradient)\n      // otherwise currentColor allows us to animate the color of the <g /> element\n      color: colorHasUrl(item.color) ? item.color : 'currentColor',\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onPointerMove: onPointerMove,\n      onPointerOut: onPointerOut,\n      onPointerUp: onPointerUp\n    }));\n  }));\n}","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/node_modules/@visx/xychart/esm/components/series/private/AnimatedGlyphs.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useMemo","useTransition","animated","to","getScaleBaseline","cleanColor","colorHasUrl","useAnimatedGlyphsConfig","_ref","xScale","yScale","horizontal","xScaleBaseline","yScaleBaseline","unique","from","_ref2","x","y","color","opacity","leave","_ref3","enter","_ref4","update","_ref5","keys","glyph","AnimatedGlyphs","_ref6","renderGlyph","glyphs","onBlur","onFocus","onPointerMove","onPointerOut","onPointerUp","animatedGlyphs","createElement","Fragment","_ref7","item","_ref8","g","transform","xVal","yVal","datum","index","size"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useMemo } from 'react';\nimport { useTransition, animated, to } from 'react-spring';\nimport getScaleBaseline from '../../../utils/getScaleBaseline';\nimport { cleanColor, colorHasUrl } from '../../../utils/cleanColorString';\n/** Memoized useTransition config */\n\nexport function useAnimatedGlyphsConfig(_ref) {\n  var xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      horizontal = _ref.horizontal;\n  var xScaleBaseline = getScaleBaseline(xScale);\n  var yScaleBaseline = getScaleBaseline(yScale);\n  return useMemo(function () {\n    return {\n      unique: true,\n      from: function from(_ref2) {\n        var x = _ref2.x,\n            y = _ref2.y,\n            color = _ref2.color;\n        return {\n          x: horizontal ? xScaleBaseline : x,\n          y: horizontal ? y : yScaleBaseline,\n          color: cleanColor(color),\n          opacity: 0\n        };\n      },\n      leave: function leave(_ref3) {\n        var x = _ref3.x,\n            y = _ref3.y,\n            color = _ref3.color;\n        return {\n          x: horizontal ? xScaleBaseline : x,\n          y: horizontal ? y : yScaleBaseline,\n          color: cleanColor(color),\n          opacity: 0\n        };\n      },\n      enter: function enter(_ref4) {\n        var x = _ref4.x,\n            y = _ref4.y,\n            color = _ref4.color;\n        return {\n          x: x,\n          y: y,\n          color: cleanColor(color),\n          opacity: 1\n        };\n      },\n      update: function update(_ref5) {\n        var x = _ref5.x,\n            y = _ref5.y,\n            color = _ref5.color;\n        return {\n          x: x,\n          y: y,\n          color: cleanColor(color),\n          opacity: 1\n        };\n      },\n      keys: function keys(glyph) {\n        return glyph.key;\n      }\n    };\n  }, [xScaleBaseline, yScaleBaseline, horizontal]);\n}\nexport default function AnimatedGlyphs(_ref6) {\n  var renderGlyph = _ref6.renderGlyph,\n      glyphs = _ref6.glyphs,\n      horizontal = _ref6.horizontal,\n      xScale = _ref6.xScale,\n      yScale = _ref6.yScale,\n      onBlur = _ref6.onBlur,\n      onFocus = _ref6.onFocus,\n      onPointerMove = _ref6.onPointerMove,\n      onPointerOut = _ref6.onPointerOut,\n      onPointerUp = _ref6.onPointerUp;\n  var animatedGlyphs = useTransition(glyphs, _extends({}, useAnimatedGlyphsConfig({\n    xScale: xScale,\n    yScale: yScale,\n    horizontal: horizontal\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, animatedGlyphs(function (_ref7, item, _ref8) {\n    var x = _ref7.x,\n        y = _ref7.y,\n        color = _ref7.color,\n        opacity = _ref7.opacity;\n    var key = _ref8.key;\n    return /*#__PURE__*/React.createElement(animated.g, {\n      key: key,\n      transform: to([x, y], function (xVal, yVal) {\n        return \"translate(\" + xVal + \", \" + yVal + \")\";\n      }),\n      color: color,\n      opacity: opacity\n    }, renderGlyph({\n      key: key,\n      datum: item.datum,\n      index: item.index,\n      x: 0,\n      y: 0,\n      size: item.size,\n      // currentColor doesn't work with url-based colors (pattern, gradient)\n      // otherwise currentColor allows us to animate the color of the <g /> element\n      color: colorHasUrl(item.color) ? item.color : 'currentColor',\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onPointerMove: onPointerMove,\n      onPointerOut: onPointerOut,\n      onPointerUp: onPointerUp\n    }));\n  }));\n}"]},"metadata":{},"sourceType":"module"}