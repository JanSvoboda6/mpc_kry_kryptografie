{"ast":null,"code":"var _jsxFileName = \"/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/project/RunnerList.tsx\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport authorizationHeader from \"../../services/AuthorizationHeader\";\nimport Runner from \"./Runner\";\nconst API_URL = \"http://localhost:8080/api/project\";\n\nfunction RunnerList(props) {\n  const [isLoaded, setLoaded] = useState(false);\n  const [runners, setRunners] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    console.log('RunnerList');\n    axios.get(API_URL + \"/runners?projectId=\" + props.projectId, {\n      headers: authorizationHeader()\n    }).then(res => {\n      console.log(res);\n      setLoaded(true);\n      const runners = [];\n      res.data.forEach(runner => {\n        runners.push({\n          projectId: runner.project.id,\n          runnerId: runner.id\n        });\n      });\n      setRunners(runners.reverse());\n      console.log(res.data);\n    }, error => {\n      setLoaded(true);\n      setErrorMessage(error.message);\n    });\n  }, []);\n\n  if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }, \" Loading...\");\n  } //TODO Jan: generate proper runner key\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"runner-list-inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FadeIn, {\n    delay: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, runners.map(runner => /*#__PURE__*/React.createElement(\"li\", {\n    key: runner.runnerId,\n    className: \"runner-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Runner, {\n    projectName: props.projectName,\n    projectId: runner.projectId,\n    runnerId: runner.runnerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nexport default RunnerList;","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/project/RunnerList.tsx"],"names":["axios","React","useEffect","useState","FadeIn","authorizationHeader","Runner","API_URL","RunnerList","props","isLoaded","setLoaded","runners","setRunners","errorMessage","setErrorMessage","console","log","get","projectId","headers","then","res","data","forEach","runner","push","project","id","runnerId","reverse","error","message","map","projectName"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,OAAO,GAAG,mCAAhB;;AAQA,SAASC,UAAT,CAAoBC,KAApB,EACA;AACI,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MACV;AACIc,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAjB,IAAAA,KAAK,CAACkB,GAAN,CAAUX,OAAO,GAAG,qBAAV,GAAkCE,KAAK,CAACU,SAAlD,EAA6D;AAAEC,MAAAA,OAAO,EAAEf,mBAAmB;AAA9B,KAA7D,EACKgB,IADL,CAESC,GAAD,IACA;AACIN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAX,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,YAAMC,OAAsB,GAAG,EAA/B;AACAU,MAAAA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,MAAM,IACvB;AACIb,QAAAA,OAAO,CAACc,IAAR,CAAa;AAAEP,UAAAA,SAAS,EAAEM,MAAM,CAACE,OAAP,CAAeC,EAA5B;AAAgCC,UAAAA,QAAQ,EAAEJ,MAAM,CAACG;AAAjD,SAAb;AACH,OAHD;AAIAf,MAAAA,UAAU,CAACD,OAAO,CAACkB,OAAR,EAAD,CAAV;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,IAAhB;AACH,KAbT,EAcSQ,KAAD,IACA;AACIpB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,MAAAA,eAAe,CAACgB,KAAK,CAACC,OAAP,CAAf;AACH,KAlBT;AAoBH,GAvBQ,EAuBN,EAvBM,CAAT;;AAyBA,MAAI,CAACtB,QAAL,EACA;AACI,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH,GAjCL,CAmCI;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,OAAO,CAACqB,GAAR,CAAYR,MAAM,iBACf;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACI,QAAhB;AAA0B,IAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEpB,KAAK,CAACyB,WAA3B;AAAwC,IAAA,SAAS,EAAET,MAAM,CAACN,SAA1D;AAAqE,IAAA,QAAQ,EAAEM,MAAM,CAACI,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADH,CADD,CADJ,CADJ,CADJ;AAaH;;AAED,eAAerB,UAAf","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport authorizationHeader from \"../../services/AuthorizationHeader\";\nimport Runner from \"./Runner\";\n\nconst API_URL = \"http://localhost:8080/api/project\";\n\ninterface Runner\n{\n    projectId: number,\n    runnerId: number\n}\n\nfunction RunnerList(props: any)\n{\n    const [isLoaded, setLoaded] = useState(false);\n    const [runners, setRunners] = useState<Runner[]>([]);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() =>\n    {\n        console.log('RunnerList');\n        axios.get(API_URL + \"/runners?projectId=\" + props.projectId, { headers: authorizationHeader()})\n            .then(\n                (res: AxiosResponse<any>) =>\n                {\n                    console.log(res);\n                    setLoaded(true);\n                    const runners: Array<Runner> = [];\n                    res.data.forEach(runner =>\n                    {\n                        runners.push({ projectId: runner.project.id, runnerId: runner.id })\n                    });\n                    setRunners(runners.reverse());\n                    console.log(res.data);\n                },\n                (error) =>\n                {\n                    setLoaded(true);\n                    setErrorMessage(error.message);\n                }\n            )\n    }, [])\n\n    if (!isLoaded)\n    {\n        return <div> Loading...</div>\n    }\n\n    //TODO Jan: generate proper runner key\n    return (\n        <div>\n            <ul className=\"runner-list-inside\">\n                <FadeIn delay={25}>\n                {runners.map(runner => (\n                    <li key={runner.runnerId} className=\"runner-item\">        \n                            <Runner projectName={props.projectName} projectId={runner.projectId} runnerId={runner.runnerId} />\n                    </li>\n                ))}\n                </FadeIn>\n            </ul>\n        </div>\n    )\n}\n\nexport default RunnerList;"]},"metadata":{},"sourceType":"module"}