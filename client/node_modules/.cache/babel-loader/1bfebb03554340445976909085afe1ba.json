{"ast":null,"code":"var _jsxFileName = \"/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/project/ProjectList.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport loadingAnimation from '../../styles/loading_graphics.gif';\nimport ProjectQuickView from './ProjectQuickView';\nimport authorizationHeader from \"../../services/AuthorizationHeader\";\nimport { Link } from 'react-router-dom';\nimport FadeIn from 'react-fade-in/lib/FadeIn';\nconst API_URL = \"http://localhost:8080/api\";\n\nfunction ProjectList() {\n  const [isLoaded, setLoaded] = useState(false);\n  const [projects, setProjects] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    axios.get(API_URL + \"/project\", {\n      headers: authorizationHeader()\n    }).then(res => {\n      setLoaded(true);\n      setProjects(res.data.reverse());\n    }, error => {\n      setLoaded(true);\n      setErrorMessage(error.message);\n    });\n  }, []);\n\n  if (isLoaded) {\n    return /*#__PURE__*/React.createElement(FadeIn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-animation-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"project-loading-animation\",\n      src: loadingAnimation,\n      alt: \"loadingAnimation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    })));\n  } else if (errorMessage || projects.length === 0) {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"project-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"No projects have been yet created.\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/newproject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"project-create-new-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }\n    }, \"Add New Project\")));\n  } else {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"project-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, projects.map(project => /*#__PURE__*/React.createElement(\"li\", {\n      key: project.id,\n      className: \"project-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ProjectQuickView, {\n      id: project.id,\n      name: project.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }))));\n  }\n}\n\nexport default ProjectList;","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/project/ProjectList.tsx"],"names":["React","useEffect","useState","axios","loadingAnimation","ProjectQuickView","authorizationHeader","Link","FadeIn","API_URL","ProjectList","isLoaded","setLoaded","projects","setProjects","errorMessage","setErrorMessage","get","headers","then","res","data","reverse","error","message","length","map","project","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,OAAO,GAAG,2BAAhB;;AAQA,SAASC,WAAT,GACA;AACE,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAY,EAAZ,CAAxC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MACV;AACEE,IAAAA,KAAK,CAACc,GAAN,CAAeR,OAAO,GAAG,UAAzB,EAAqC;AAAES,MAAAA,OAAO,EAAEZ,mBAAmB;AAA9B,KAArC,EACGa,IADH,CAEKC,GAAD,IACA;AACER,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,WAAW,CAACM,GAAG,CAACC,IAAJ,CAASC,OAAT,EAAD,CAAX;AACD,KANL,EAOKC,KAAD,IACA;AACEX,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,MAAAA,eAAe,CAACO,KAAK,CAACC,OAAP,CAAf;AACD,KAXL;AAaD,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIb,QAAJ,EACA;AACE,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAA2C,MAAA,GAAG,EAAEP,gBAAhD;AAAkE,MAAA,GAAG,EAAC,kBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADL,CAAP;AAKD,GAPD,MAOO,IAAIW,YAAY,IAAIF,QAAQ,CAACY,MAAT,KAAoB,CAAxC,EACP;AACE,wBACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,eAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAvB,CAFF,CADF;AAKD,GAPM,MAQP;AACE,wBACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,QAAQ,CAACa,GAAT,CAAaC,OAAO,iBACnB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAED,OAAO,CAACC,EAA9B;AAAkC,MAAA,IAAI,EAAED,OAAO,CAACE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF;AASD;AACF;;AAED,eAAenB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport loadingAnimation from '../../styles/loading_graphics.gif';\nimport ProjectQuickView from './ProjectQuickView';\nimport authorizationHeader from \"../../services/AuthorizationHeader\";\nimport { Link } from 'react-router-dom';\nimport FadeIn from 'react-fade-in/lib/FadeIn';\n\nconst API_URL = \"http://localhost:8080/api\";\n\ninterface Project\n{\n  id: number,\n  name: string\n}\n\nfunction ProjectList()\n{\n  const [isLoaded, setLoaded] = useState(false);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() =>\n  {\n    axios.get<any>(API_URL + \"/project\", { headers: authorizationHeader() })\n      .then(\n        (res) =>\n        {\n          setLoaded(true);\n          setProjects(res.data.reverse());\n        },\n        (error) =>\n        {\n          setLoaded(true);\n          setErrorMessage(error.message);\n        }\n      )\n  }, [])\n\n  if (isLoaded)\n  {\n    return <FadeIn>\n                <div className='loading-animation-wrapper'>\n                    <img className='project-loading-animation' src={loadingAnimation} alt=\"loadingAnimation\" />\n                </div>\n          </FadeIn>;\n  } else if (errorMessage || projects.length === 0)\n  {\n    return (\n      <ul className=\"project-list\">\n        <div className=\"project-text\">No projects have been yet created.</div>\n        <Link to=\"/newproject\"><button className=\"project-create-new-button\">Add New Project</button></Link>\n      </ul>)\n  } else\n  {\n    return (\n      <ul className=\"project-list\">\n        {projects.map(project => (\n          <li key={project.id} className=\"project-item\">\n            <ProjectQuickView id={project.id} name={project.name} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}