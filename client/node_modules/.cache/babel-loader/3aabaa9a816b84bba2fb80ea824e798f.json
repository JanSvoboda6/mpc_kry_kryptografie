{"ast":null,"code":"var _jsxFileName = \"/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/project/Runner.tsx\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport RunnerService from \"../../services/RunnerService\";\nimport loadingAnimation from '../../styles/loading_graphics.gif';\nimport authorizationHeader from \"../../services/AuthorizationHeader\";\nconst API_URL = \"http://localhost:8080/api/project\";\n\nfunction Runner(props) {\n  let intervalId;\n  const [isFinished, setFinished] = useState(false);\n  const [firstLabelResult, setFirstLabelResult] = useState(undefined);\n  const [secondLabelResult, setSecondLabelResult] = useState(undefined);\n  const [isLoaded, setLoaded] = useState(false);\n  const [parameters, setParameters] = useState({\n    gamma: undefined,\n    c: undefined\n  });\n  const FIVE_SECONDS = 5 * 1000;\n  useEffect(() => {\n    axios.get(API_URL + '/runner?projectId=' + props.projectId + '&' + 'runnerId=' + props.runnerId, {\n      headers: authorizationHeader()\n    }).then(res => {\n      setLoaded(true);\n      setParameters({\n        gamma: res.data.gammaParameter,\n        c: res.data.cparameter\n      });\n      setFinished(res.data.finished);\n\n      if (res.data.finished) {\n        axios.get(API_URL + '/runner/result?projectId=' + props.projectId + '&' + 'runnerId=' + props.runnerId, {\n          headers: authorizationHeader()\n        }).then(res => {\n          setFirstLabelResult(res.data.firstLabelResult);\n          setSecondLabelResult(res.data.secondLabelResult);\n        });\n      } else {\n        startRecurrentRequests();\n      }\n    }, error => {});\n  }, []);\n\n  const startRecurrentRequests = () => {\n    intervalId = setInterval(isRunningFinished, FIVE_SECONDS);\n  };\n\n  const isRunningFinished = () => {\n    if (!isFinished) {\n      RunnerService.isFinished(props.projectId, props.runnerId).then(res => {\n        console.log(res.data.isFinished);\n        console.log(res.data.firstLabelResult);\n        console.log(res.data.secondLabelResult);\n        setFinished(res.data.isFinished);\n\n        if (res.data.isFinished) {\n          clearInterval(intervalId);\n          setFirstLabelResult(res.data.firstLabelResult);\n          setSecondLabelResult(res.data.secondLabelResult);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \" RUNNER ID: \", props.runnerId), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Gamma parameter: \", parameters.gamma, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"C parameter: \", parameters.c), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"running-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, !isFinished && /*#__PURE__*/React.createElement(\"img\", {\n    className: \"loading-runner-icon\",\n    src: loadingAnimation,\n    alt: \"loading_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 64\n    }\n  })), isFinished && firstLabelResult !== undefined && secondLabelResult !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Validation result of first label: \", (firstLabelResult * 100).toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Validation result of second label: \", (secondLabelResult * 100).toFixed(2), \"%\")));\n}\n\nexport default Runner;","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/project/Runner.tsx"],"names":["axios","React","useEffect","useState","RunnerService","loadingAnimation","authorizationHeader","API_URL","Runner","props","intervalId","isFinished","setFinished","firstLabelResult","setFirstLabelResult","undefined","secondLabelResult","setSecondLabelResult","isLoaded","setLoaded","parameters","setParameters","gamma","c","FIVE_SECONDS","get","projectId","runnerId","headers","then","res","data","gammaParameter","cparameter","finished","startRecurrentRequests","error","setInterval","isRunningFinished","console","log","clearInterval","toFixed"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport RunnerService from \"../../services/RunnerService\";\nimport loadingAnimation from '../../styles/loading_graphics.gif';\nimport authorizationHeader from \"../../services/AuthorizationHeader\";\n\nconst API_URL = \"http://localhost:8080/api/project\";\n\ninterface Parameters\n{\n    gamma: number | undefined,\n    c: number | undefined\n}\n\nfunction Runner(props: any)\n{\n    let intervalId:any;\n    const [isFinished, setFinished] = useState(false);\n    const [firstLabelResult, setFirstLabelResult] = useState<number | undefined>(undefined);\n    const [secondLabelResult, setSecondLabelResult] = useState<number | undefined>(undefined);\n    const [isLoaded, setLoaded] = useState(false);\n    const [parameters, setParameters] = useState<Parameters>({ gamma: undefined, c: undefined });\n    const FIVE_SECONDS = 5 * 1000;\n\n    useEffect(() =>\n    {\n        axios.get(API_URL + '/runner?projectId=' + props.projectId + '&' + 'runnerId=' + props.runnerId, { headers: authorizationHeader() })\n            .then(\n                (res: AxiosResponse<any>) =>\n                {\n                    setLoaded(true);\n                    setParameters({ gamma: res.data.gammaParameter, c: res.data.cparameter })\n                    setFinished(res.data.finished);\n\n                    if (res.data.finished)\n                    {\n                        axios.get(API_URL + '/runner/result?projectId=' + props.projectId + '&' + 'runnerId=' + props.runnerId, {headers: authorizationHeader()})\n                            .then((res: AxiosResponse<any>) =>\n                            {\n                                setFirstLabelResult(res.data.firstLabelResult);\n                                setSecondLabelResult(res.data.secondLabelResult);\n                            })\n                    }\n                    else\n                    {\n                        startRecurrentRequests();\n                    }\n                },\n                (error) =>\n                {\n                }\n            )\n    }, [])\n\n    const startRecurrentRequests = () =>\n    {\n        intervalId = setInterval(isRunningFinished, FIVE_SECONDS);\n    }\n\n    const isRunningFinished = () =>\n    {\n        if(!isFinished)\n        {\n        RunnerService.isFinished(props.projectId, props.runnerId)\n            .then(\n                (res) =>\n                {\n                    console.log(res.data.isFinished);\n                    console.log(res.data.firstLabelResult);\n                    console.log(res.data.secondLabelResult);\n                    setFinished(res.data.isFinished);\n                    if (res.data.isFinished)\n                    {\n                        clearInterval(intervalId);\n                        setFirstLabelResult(res.data.firstLabelResult);\n                        setSecondLabelResult(res.data.secondLabelResult);\n                    }\n                }\n            )\n        }\n    }\n\n    return (\n        <div>\n            <p> RUNNER ID: {props.runnerId}</p>\n            <p>Gamma parameter: {parameters.gamma} </p>\n            <p>C parameter: {parameters.c}</p>\n            <div className=\"running-indicator\">{!isFinished && <img className='loading-runner-icon' src={loadingAnimation} alt=\"loading_icon\" />}</div>\n            {isFinished && firstLabelResult !== undefined && secondLabelResult !== undefined &&\n                <div>\n                    <div className=\"text-confirm\">Validation result of first label: {(firstLabelResult * 100).toFixed(2)}%</div>\n                    <div className=\"text-confirm\">Validation result of second label: {(secondLabelResult * 100).toFixed(2)}%</div>\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default Runner;"]},"metadata":{},"sourceType":"module"}