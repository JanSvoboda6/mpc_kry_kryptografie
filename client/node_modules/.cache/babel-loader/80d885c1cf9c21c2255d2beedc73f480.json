{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './UserSlice';\nimport thunk from \"redux-thunk\";\nexport const store = configureStore({\n  reducer: {\n    user: userReducer\n  },\n  middleware: [thunk]\n}); //TODO Jan: How to use these states?","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/redux/store.ts"],"names":["configureStore","userReducer","thunk","store","reducer","user","middleware"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAChCI,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEJ;AADD,GADuB;AAIhCK,EAAAA,UAAU,EAAE,CAACJ,KAAD;AAJoB,CAAD,CAA5B,C,CAOP","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './UserSlice'\n\nimport thunk from \"redux-thunk\";\n\nexport const store = configureStore({\n    reducer: {\n        user: userReducer\n    },\n    middleware: [thunk]\n})\n\n//TODO Jan: How to use these states?\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch"]},"metadata":{},"sourceType":"module"}