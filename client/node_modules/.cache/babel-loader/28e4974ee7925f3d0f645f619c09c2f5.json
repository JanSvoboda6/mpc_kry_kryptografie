{"ast":null,"code":"var _jsxFileName = \"/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/analysis/CustomChartBackground.tsx\";\nimport React, { useContext } from 'react';\nimport { PatternLines } from '@visx/pattern';\nimport { DataContext } from '@visx/xychart';\nconst patternId = 'xy-chart-pattern';\nexport default function CustomChartBackground() {\n  var _theme$gridStyles, _theme$backgroundColo;\n\n  const {\n    theme,\n    margin,\n    width,\n    height,\n    innerWidth,\n    innerHeight\n  } = useContext(DataContext); // early return values not available in context\n\n  if (width == null || height == null || margin == null || theme == null) return null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PatternLines, {\n    id: patternId,\n    width: 16,\n    height: 16,\n    orientation: ['diagonal'],\n    stroke: theme === null || theme === void 0 ? void 0 : (_theme$gridStyles = theme.gridStyles) === null || _theme$gridStyles === void 0 ? void 0 : _theme$gridStyles.stroke,\n    strokeWidth: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: (_theme$backgroundColo = theme === null || theme === void 0 ? void 0 : theme.backgroundColor) !== null && _theme$backgroundColo !== void 0 ? _theme$backgroundColo : '#fff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: margin.left,\n    y: margin.top,\n    width: innerWidth,\n    height: innerHeight,\n    fill: `url(#${patternId})`,\n    fillOpacity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/analysis/CustomChartBackground.tsx"],"names":["React","useContext","PatternLines","DataContext","patternId","CustomChartBackground","theme","margin","width","height","innerWidth","innerHeight","gridStyles","stroke","backgroundColor","left","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,SAAS,GAAG,kBAAlB;AAEA,eAAe,SAASC,qBAAT,GACf;AAAA;;AACI,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA,UAAhC;AAA4CC,IAAAA;AAA5C,MAA4DV,UAAU,CAACE,WAAD,CAA5E,CADJ,CAGI;;AACA,MAAIK,KAAK,IAAI,IAAT,IAAiBC,MAAM,IAAI,IAA3B,IAAmCF,MAAM,IAAI,IAA7C,IAAqDD,KAAK,IAAI,IAAlE,EAAwE,OAAO,IAAP;AAExE,sBACI,uDACI,oBAAC,YAAD;AACI,IAAA,EAAE,EAAEF,SADR;AAEI,IAAA,KAAK,EAAE,EAFX;AAGI,IAAA,MAAM,EAAE,EAHZ;AAII,IAAA,WAAW,EAAE,CAAC,UAAD,CAJjB;AAKI,IAAA,MAAM,EAAEE,KAAF,aAAEA,KAAF,4CAAEA,KAAK,CAAEM,UAAT,sDAAE,kBAAmBC,MAL/B;AAMI,IAAA,WAAW,EAAE,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAM,IAAA,CAAC,EAAE,CAAT;AAAY,IAAA,CAAC,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAEL,KAAzB;AAAgC,IAAA,MAAM,EAAEC,MAAxC;AAAgD,IAAA,IAAI,2BAAEH,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEQ,eAAT,yEAA4B,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI;AACI,IAAA,CAAC,EAAEP,MAAM,CAACQ,IADd;AAEI,IAAA,CAAC,EAAER,MAAM,CAACS,GAFd;AAGI,IAAA,KAAK,EAAEN,UAHX;AAII,IAAA,MAAM,EAAEC,WAJZ;AAKI,IAAA,IAAI,EAAG,QAAOP,SAAU,GAL5B;AAMI,IAAA,WAAW,EAAE,GANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAqBH","sourcesContent":["import React, { useContext } from 'react';\nimport { PatternLines } from '@visx/pattern';\nimport { DataContext } from '@visx/xychart';\n\nconst patternId = 'xy-chart-pattern';\n\nexport default function CustomChartBackground()\n{\n    const { theme, margin, width, height, innerWidth, innerHeight } = useContext(DataContext);\n\n    // early return values not available in context\n    if (width == null || height == null || margin == null || theme == null) return null;\n\n    return (\n        <>\n            <PatternLines\n                id={patternId}\n                width={16}\n                height={16}\n                orientation={['diagonal']}\n                stroke={theme?.gridStyles?.stroke}\n                strokeWidth={1}\n            />\n            <rect x={0} y={0} width={width} height={height} fill={theme?.backgroundColor ?? '#fff'} />\n            <rect\n                x={margin.left}\n                y={margin.top}\n                width={innerWidth}\n                height={innerHeight}\n                fill={`url(#${patternId})`}\n                fillOpacity={0.3}\n            />\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}