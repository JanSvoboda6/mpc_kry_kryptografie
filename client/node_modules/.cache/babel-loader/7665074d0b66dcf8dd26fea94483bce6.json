{"ast":null,"code":"export default function AuthorizationHeader() {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n\n  if (user && user.accessToken) {\n    var authorizationHeader = {\n      Authorization: 'Bearer ' + user.accessToken\n    };\n    return authorizationHeader;\n  } else {\n    return {};\n  }\n}","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/services/AuthorizationHeader.ts"],"names":["AuthorizationHeader","user","JSON","parse","localStorage","getItem","accessToken","authorizationHeader","Authorization"],"mappings":"AAEA,eAAe,SAASA,mBAAT,GACf;AACI,QAAMC,IAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAA3C,CAAnB;;AAEA,MAAIJ,IAAI,IAAIA,IAAI,CAACK,WAAjB,EACA;AACI,QAAIC,mBAAiD,GAAG;AAAEC,MAAAA,aAAa,EAAE,YAAYP,IAAI,CAACK;AAAlC,KAAxD;AACA,WAAOC,mBAAP;AACH,GAJD,MAKA;AACI,WAAO,EAAP;AACH;AACJ","sourcesContent":["import { AuthorizationHeader as AuthorizationHeaderInterface, User } from \"../types\";\n\nexport default function AuthorizationHeader()\n{\n    const user: User = JSON.parse(localStorage.getItem('user') || '{}');\n\n    if (user && user.accessToken)\n    {\n        var authorizationHeader: AuthorizationHeaderInterface = { Authorization: 'Bearer ' + user.accessToken };\n        return authorizationHeader;\n    } else\n    {\n        return {};\n    }\n}"]},"metadata":{},"sourceType":"module"}