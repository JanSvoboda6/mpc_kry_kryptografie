{"ast":null,"code":"var _jsxFileName = \"/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/pages/RegisterPage.tsx\";\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport logo from '../../styles/logo_but_text.png';\nimport RegisterService from \"../../services/RegisterService\";\nimport FadeIn from \"react-fade-in\";\n\nfunction Register() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isRegistrationSuccessful, setRegistrationSuccessful] = useState(false);\n\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n    setRegistrationSuccessful(false);\n    var isValidationSuccesful = true;\n\n    if (isValidationSuccesful) //TODO Jan: implement proper validation\n      {\n        RegisterService(username, password).then(() => {\n          setRegistrationSuccessful(true);\n        }, error => {\n          var message = \"\";\n\n          if (error && error.response && error.response.data.message) {\n            message = error.response.data.message;\n          } else if (error.message) {\n            console.log(error.message);\n            message = error.message;\n          } else if (error.toString()) {\n            message = error.toString();\n          }\n\n          setMessage(message);\n        });\n      }\n\n    ;\n  };\n\n  if (isRegistrationSuccessful) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login?popup=t\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FadeIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: logo,\n    alt: \"logo_but\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-item email-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: username,\n    onChange: onChangeUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-item password-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"input-text\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, \"Sign Up\"))), message !== \"\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"register-link-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Already have an account?\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"register-link-reference\",\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Login\")))));\n}\n\nexport default connect()(Register);","map":{"version":3,"sources":["/Users/jan/dev/thesis/ml_runner/react/ml-runner/src/components/pages/RegisterPage.tsx"],"names":["React","useState","Link","Redirect","connect","logo","RegisterService","FadeIn","Register","username","setUsername","password","setPassword","message","setMessage","isRegistrationSuccessful","setRegistrationSuccessful","onChangeUsername","e","target","value","onChangePassword","handleRegister","preventDefault","isValidationSuccesful","then","error","response","data","console","log","toString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport logo from '../../styles/logo_but_text.png';\nimport dots from '../../styles/dots_logo_big.svg';\nimport RegisterService from \"../../services/RegisterService\";\nimport FadeIn from \"react-fade-in\";\n\nfunction Register()\n{\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [isRegistrationSuccessful, setRegistrationSuccessful] = useState(false);\n\n    const onChangeUsername = (e: { target: { value: string; }; }) =>\n    {\n        setUsername(e.target.value);\n    }\n\n    const onChangePassword = (e: { target: { value: string; }; }) =>\n    {\n        setPassword(e.target.value);\n    }\n\n    const handleRegister = (e: { preventDefault: () => void; }) =>\n    {\n        e.preventDefault();\n        setRegistrationSuccessful(false);\n\n        var isValidationSuccesful = true;\n        if (isValidationSuccesful) //TODO Jan: implement proper validation\n        {\n            RegisterService(username, password).then(\n                () =>\n                {\n                    setRegistrationSuccessful(true)\n                },\n                (error: any) =>\n                {\n                    var message = \"\";\n                    if (error && error.response && error.response.data.message)\n                    {\n                        message = error.response.data.message;\n                    }\n                    else if (error.message)\n                    {\n                        console.log(error.message)\n                        message = error.message;\n                    }\n                    else if (error.toString())\n                    {\n                        message = error.toString();\n                    }\n\n                    setMessage(message)\n                });\n        };\n    }\n\n    if (isRegistrationSuccessful)\n    {\n        return <Redirect to=\"/login?popup=t\" />;\n    }\n\n    return (\n        <div>\n            {/* <div className=\"wrapper\">\n                <a className=\"register-item logo-register\"><img className='logo-dots-bigger' src={dots} alt=\"logo_dots\" /></a>\n            </div> */}\n            <FadeIn>\n                <div className=\"register-page\">\n                    <img className='logo' src={logo} alt=\"logo_but\" />\n                    <form onSubmit={handleRegister}>\n                        <div>\n                            <div className=\"register-item email-text\">\n                                <input\n                                    type=\"text\"\n                                    className=\"input-text\"\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    value={username}\n                                    onChange={onChangeUsername}\n                                />\n                            </div>\n                            <div className=\"register-item password-text\">\n                                <input\n                                    type=\"password\"\n                                    className=\"input-text\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={onChangePassword}\n                                />\n                            </div>\n                            <div className=\"register-item\">\n                            <button className=\"submit-button\">Sign Up</button>\n                            </div>\n                        </div>\n                        {message !== \"\" && (\n                            <div className=\"register-item\">\n                                <div className=\"alert-text\">\n                                {message}\n                                </div>\n                            </div>\n                        )}\n                    </form>\n                    <div className=\"register-link\">\n                        <p className=\"register-link-text\" >Already have an account?</p>\n                        <Link className=\"register-link-reference\" to=\"/login\">Login</Link>\n                    </div>\n                </div>\n            </FadeIn >\n        </div>\n    );\n}\n\n\nexport default connect()(Register);"]},"metadata":{},"sourceType":"module"}